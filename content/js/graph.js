/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 141.0, "minX": 0.0, "maxY": 10874.0, "series": [{"data": [[0.0, 198.0], [0.1, 198.0], [0.2, 200.0], [0.3, 202.0], [0.4, 202.0], [0.5, 202.0], [0.6, 202.0], [0.7, 203.0], [0.8, 203.0], [0.9, 203.0], [1.0, 203.0], [1.1, 203.0], [1.2, 203.0], [1.3, 204.0], [1.4, 204.0], [1.5, 204.0], [1.6, 204.0], [1.7, 204.0], [1.8, 205.0], [1.9, 205.0], [2.0, 205.0], [2.1, 205.0], [2.2, 206.0], [2.3, 206.0], [2.4, 206.0], [2.5, 206.0], [2.6, 207.0], [2.7, 207.0], [2.8, 207.0], [2.9, 208.0], [3.0, 208.0], [3.1, 208.0], [3.2, 208.0], [3.3, 208.0], [3.4, 209.0], [3.5, 209.0], [3.6, 209.0], [3.7, 209.0], [3.8, 209.0], [3.9, 209.0], [4.0, 209.0], [4.1, 209.0], [4.2, 210.0], [4.3, 210.0], [4.4, 210.0], [4.5, 210.0], [4.6, 210.0], [4.7, 210.0], [4.8, 210.0], [4.9, 210.0], [5.0, 211.0], [5.1, 211.0], [5.2, 211.0], [5.3, 211.0], [5.4, 211.0], [5.5, 212.0], [5.6, 212.0], [5.7, 212.0], [5.8, 212.0], [5.9, 212.0], [6.0, 213.0], [6.1, 213.0], [6.2, 213.0], [6.3, 213.0], [6.4, 213.0], [6.5, 213.0], [6.6, 213.0], [6.7, 214.0], [6.8, 214.0], [6.9, 214.0], [7.0, 214.0], [7.1, 214.0], [7.2, 214.0], [7.3, 214.0], [7.4, 215.0], [7.5, 215.0], [7.6, 215.0], [7.7, 215.0], [7.8, 215.0], [7.9, 215.0], [8.0, 215.0], [8.1, 215.0], [8.2, 215.0], [8.3, 215.0], [8.4, 216.0], [8.5, 216.0], [8.6, 216.0], [8.7, 216.0], [8.8, 216.0], [8.9, 216.0], [9.0, 217.0], [9.1, 217.0], [9.2, 217.0], [9.3, 217.0], [9.4, 218.0], [9.5, 218.0], [9.6, 218.0], [9.7, 218.0], [9.8, 218.0], [9.9, 218.0], [10.0, 218.0], [10.1, 219.0], [10.2, 219.0], [10.3, 219.0], [10.4, 219.0], [10.5, 219.0], [10.6, 219.0], [10.7, 219.0], [10.8, 219.0], [10.9, 219.0], [11.0, 220.0], [11.1, 220.0], [11.2, 220.0], [11.3, 220.0], [11.4, 221.0], [11.5, 221.0], [11.6, 221.0], [11.7, 221.0], [11.8, 221.0], [11.9, 221.0], [12.0, 221.0], [12.1, 221.0], [12.2, 221.0], [12.3, 222.0], [12.4, 222.0], [12.5, 222.0], [12.6, 222.0], [12.7, 223.0], [12.8, 223.0], [12.9, 223.0], [13.0, 223.0], [13.1, 223.0], [13.2, 223.0], [13.3, 224.0], [13.4, 224.0], [13.5, 224.0], [13.6, 224.0], [13.7, 224.0], [13.8, 224.0], [13.9, 225.0], [14.0, 225.0], [14.1, 225.0], [14.2, 225.0], [14.3, 226.0], [14.4, 226.0], [14.5, 226.0], [14.6, 226.0], [14.7, 226.0], [14.8, 226.0], [14.9, 227.0], [15.0, 227.0], [15.1, 227.0], [15.2, 227.0], [15.3, 227.0], [15.4, 227.0], [15.5, 227.0], [15.6, 228.0], [15.7, 228.0], [15.8, 228.0], [15.9, 229.0], [16.0, 229.0], [16.1, 229.0], [16.2, 229.0], [16.3, 229.0], [16.4, 229.0], [16.5, 229.0], [16.6, 229.0], [16.7, 229.0], [16.8, 230.0], [16.9, 230.0], [17.0, 230.0], [17.1, 230.0], [17.2, 230.0], [17.3, 230.0], [17.4, 230.0], [17.5, 231.0], [17.6, 231.0], [17.7, 231.0], [17.8, 231.0], [17.9, 231.0], [18.0, 232.0], [18.1, 232.0], [18.2, 232.0], [18.3, 233.0], [18.4, 233.0], [18.5, 233.0], [18.6, 233.0], [18.7, 233.0], [18.8, 234.0], [18.9, 234.0], [19.0, 234.0], [19.1, 234.0], [19.2, 234.0], [19.3, 234.0], [19.4, 234.0], [19.5, 235.0], [19.6, 235.0], [19.7, 235.0], [19.8, 235.0], [19.9, 235.0], [20.0, 236.0], [20.1, 236.0], [20.2, 236.0], [20.3, 236.0], [20.4, 236.0], [20.5, 237.0], [20.6, 237.0], [20.7, 237.0], [20.8, 237.0], [20.9, 238.0], [21.0, 238.0], [21.1, 238.0], [21.2, 238.0], [21.3, 238.0], [21.4, 238.0], [21.5, 239.0], [21.6, 239.0], [21.7, 239.0], [21.8, 240.0], [21.9, 240.0], [22.0, 240.0], [22.1, 240.0], [22.2, 241.0], [22.3, 241.0], [22.4, 241.0], [22.5, 242.0], [22.6, 242.0], [22.7, 242.0], [22.8, 243.0], [22.9, 243.0], [23.0, 243.0], [23.1, 243.0], [23.2, 244.0], [23.3, 244.0], [23.4, 244.0], [23.5, 244.0], [23.6, 244.0], [23.7, 245.0], [23.8, 245.0], [23.9, 245.0], [24.0, 246.0], [24.1, 246.0], [24.2, 246.0], [24.3, 246.0], [24.4, 247.0], [24.5, 247.0], [24.6, 248.0], [24.7, 248.0], [24.8, 249.0], [24.9, 249.0], [25.0, 249.0], [25.1, 249.0], [25.2, 250.0], [25.3, 250.0], [25.4, 250.0], [25.5, 251.0], [25.6, 251.0], [25.7, 251.0], [25.8, 251.0], [25.9, 251.0], [26.0, 252.0], [26.1, 252.0], [26.2, 252.0], [26.3, 252.0], [26.4, 253.0], [26.5, 253.0], [26.6, 253.0], [26.7, 253.0], [26.8, 254.0], [26.9, 254.0], [27.0, 255.0], [27.1, 255.0], [27.2, 255.0], [27.3, 255.0], [27.4, 255.0], [27.5, 256.0], [27.6, 257.0], [27.7, 257.0], [27.8, 257.0], [27.9, 258.0], [28.0, 259.0], [28.1, 259.0], [28.2, 260.0], [28.3, 260.0], [28.4, 260.0], [28.5, 260.0], [28.6, 260.0], [28.7, 260.0], [28.8, 262.0], [28.9, 262.0], [29.0, 262.0], [29.1, 262.0], [29.2, 263.0], [29.3, 263.0], [29.4, 263.0], [29.5, 263.0], [29.6, 264.0], [29.7, 264.0], [29.8, 265.0], [29.9, 267.0], [30.0, 267.0], [30.1, 267.0], [30.2, 267.0], [30.3, 267.0], [30.4, 268.0], [30.5, 268.0], [30.6, 268.0], [30.7, 269.0], [30.8, 269.0], [30.9, 269.0], [31.0, 269.0], [31.1, 269.0], [31.2, 269.0], [31.3, 270.0], [31.4, 270.0], [31.5, 270.0], [31.6, 271.0], [31.7, 271.0], [31.8, 272.0], [31.9, 272.0], [32.0, 272.0], [32.1, 272.0], [32.2, 273.0], [32.3, 273.0], [32.4, 273.0], [32.5, 273.0], [32.6, 274.0], [32.7, 274.0], [32.8, 274.0], [32.9, 274.0], [33.0, 275.0], [33.1, 275.0], [33.2, 275.0], [33.3, 276.0], [33.4, 276.0], [33.5, 276.0], [33.6, 276.0], [33.7, 277.0], [33.8, 277.0], [33.9, 277.0], [34.0, 278.0], [34.1, 278.0], [34.2, 278.0], [34.3, 279.0], [34.4, 279.0], [34.5, 279.0], [34.6, 279.0], [34.7, 280.0], [34.8, 280.0], [34.9, 280.0], [35.0, 281.0], [35.1, 281.0], [35.2, 281.0], [35.3, 281.0], [35.4, 282.0], [35.5, 282.0], [35.6, 282.0], [35.7, 282.0], [35.8, 283.0], [35.9, 283.0], [36.0, 283.0], [36.1, 283.0], [36.2, 283.0], [36.3, 284.0], [36.4, 284.0], [36.5, 284.0], [36.6, 284.0], [36.7, 284.0], [36.8, 284.0], [36.9, 284.0], [37.0, 285.0], [37.1, 285.0], [37.2, 285.0], [37.3, 286.0], [37.4, 286.0], [37.5, 286.0], [37.6, 286.0], [37.7, 286.0], [37.8, 287.0], [37.9, 287.0], [38.0, 287.0], [38.1, 287.0], [38.2, 287.0], [38.3, 288.0], [38.4, 288.0], [38.5, 288.0], [38.6, 288.0], [38.7, 288.0], [38.8, 288.0], [38.9, 288.0], [39.0, 289.0], [39.1, 289.0], [39.2, 289.0], [39.3, 289.0], [39.4, 289.0], [39.5, 289.0], [39.6, 289.0], [39.7, 289.0], [39.8, 289.0], [39.9, 290.0], [40.0, 290.0], [40.1, 290.0], [40.2, 290.0], [40.3, 290.0], [40.4, 290.0], [40.5, 290.0], [40.6, 291.0], [40.7, 291.0], [40.8, 291.0], [40.9, 291.0], [41.0, 291.0], [41.1, 291.0], [41.2, 291.0], [41.3, 291.0], [41.4, 291.0], [41.5, 291.0], [41.6, 292.0], [41.7, 292.0], [41.8, 292.0], [41.9, 292.0], [42.0, 293.0], [42.1, 293.0], [42.2, 293.0], [42.3, 293.0], [42.4, 293.0], [42.5, 293.0], [42.6, 294.0], [42.7, 294.0], [42.8, 294.0], [42.9, 294.0], [43.0, 294.0], [43.1, 294.0], [43.2, 295.0], [43.3, 295.0], [43.4, 295.0], [43.5, 296.0], [43.6, 296.0], [43.7, 296.0], [43.8, 296.0], [43.9, 296.0], [44.0, 296.0], [44.1, 296.0], [44.2, 297.0], [44.3, 297.0], [44.4, 297.0], [44.5, 297.0], [44.6, 297.0], [44.7, 297.0], [44.8, 298.0], [44.9, 298.0], [45.0, 298.0], [45.1, 298.0], [45.2, 298.0], [45.3, 298.0], [45.4, 298.0], [45.5, 298.0], [45.6, 298.0], [45.7, 299.0], [45.8, 299.0], [45.9, 299.0], [46.0, 299.0], [46.1, 299.0], [46.2, 299.0], [46.3, 299.0], [46.4, 299.0], [46.5, 299.0], [46.6, 299.0], [46.7, 299.0], [46.8, 299.0], [46.9, 299.0], [47.0, 299.0], [47.1, 299.0], [47.2, 299.0], [47.3, 300.0], [47.4, 300.0], [47.5, 300.0], [47.6, 300.0], [47.7, 300.0], [47.8, 300.0], [47.9, 300.0], [48.0, 300.0], [48.1, 300.0], [48.2, 300.0], [48.3, 300.0], [48.4, 300.0], [48.5, 300.0], [48.6, 300.0], [48.7, 300.0], [48.8, 300.0], [48.9, 300.0], [49.0, 300.0], [49.1, 300.0], [49.2, 300.0], [49.3, 300.0], [49.4, 301.0], [49.5, 301.0], [49.6, 301.0], [49.7, 301.0], [49.8, 301.0], [49.9, 301.0], [50.0, 301.0], [50.1, 301.0], [50.2, 301.0], [50.3, 301.0], [50.4, 301.0], [50.5, 301.0], [50.6, 301.0], [50.7, 301.0], [50.8, 301.0], [50.9, 301.0], [51.0, 301.0], [51.1, 301.0], [51.2, 301.0], [51.3, 301.0], [51.4, 301.0], [51.5, 301.0], [51.6, 301.0], [51.7, 301.0], [51.8, 301.0], [51.9, 301.0], [52.0, 301.0], [52.1, 301.0], [52.2, 301.0], [52.3, 301.0], [52.4, 301.0], [52.5, 301.0], [52.6, 301.0], [52.7, 301.0], [52.8, 301.0], [52.9, 302.0], [53.0, 302.0], [53.1, 302.0], [53.2, 302.0], [53.3, 302.0], [53.4, 302.0], [53.5, 302.0], [53.6, 302.0], [53.7, 302.0], [53.8, 302.0], [53.9, 302.0], [54.0, 302.0], [54.1, 302.0], [54.2, 302.0], [54.3, 302.0], [54.4, 302.0], [54.5, 302.0], [54.6, 302.0], [54.7, 302.0], [54.8, 302.0], [54.9, 302.0], [55.0, 302.0], [55.1, 302.0], [55.2, 302.0], [55.3, 302.0], [55.4, 302.0], [55.5, 302.0], [55.6, 302.0], [55.7, 302.0], [55.8, 302.0], [55.9, 302.0], [56.0, 302.0], [56.1, 302.0], [56.2, 302.0], [56.3, 302.0], [56.4, 302.0], [56.5, 302.0], [56.6, 302.0], [56.7, 302.0], [56.8, 302.0], [56.9, 302.0], [57.0, 302.0], [57.1, 302.0], [57.2, 302.0], [57.3, 302.0], [57.4, 302.0], [57.5, 302.0], [57.6, 302.0], [57.7, 303.0], [57.8, 303.0], [57.9, 303.0], [58.0, 303.0], [58.1, 303.0], [58.2, 303.0], [58.3, 303.0], [58.4, 303.0], [58.5, 303.0], [58.6, 303.0], [58.7, 303.0], [58.8, 303.0], [58.9, 303.0], [59.0, 303.0], [59.1, 303.0], [59.2, 303.0], [59.3, 303.0], [59.4, 303.0], [59.5, 303.0], [59.6, 303.0], [59.7, 303.0], [59.8, 303.0], [59.9, 303.0], [60.0, 303.0], [60.1, 303.0], [60.2, 303.0], [60.3, 303.0], [60.4, 303.0], [60.5, 303.0], [60.6, 303.0], [60.7, 303.0], [60.8, 303.0], [60.9, 303.0], [61.0, 303.0], [61.1, 303.0], [61.2, 303.0], [61.3, 303.0], [61.4, 303.0], [61.5, 303.0], [61.6, 303.0], [61.7, 303.0], [61.8, 303.0], [61.9, 303.0], [62.0, 303.0], [62.1, 303.0], [62.2, 303.0], [62.3, 303.0], [62.4, 303.0], [62.5, 303.0], [62.6, 303.0], [62.7, 303.0], [62.8, 303.0], [62.9, 303.0], [63.0, 303.0], [63.1, 303.0], [63.2, 303.0], [63.3, 303.0], [63.4, 303.0], [63.5, 303.0], [63.6, 303.0], [63.7, 303.0], [63.8, 303.0], [63.9, 303.0], [64.0, 303.0], [64.1, 303.0], [64.2, 303.0], [64.3, 303.0], [64.4, 303.0], [64.5, 303.0], [64.6, 303.0], [64.7, 303.0], [64.8, 303.0], [64.9, 303.0], [65.0, 303.0], [65.1, 303.0], [65.2, 304.0], [65.3, 304.0], [65.4, 304.0], [65.5, 304.0], [65.6, 304.0], [65.7, 304.0], [65.8, 304.0], [65.9, 304.0], [66.0, 304.0], [66.1, 304.0], [66.2, 304.0], [66.3, 304.0], [66.4, 304.0], [66.5, 304.0], [66.6, 304.0], [66.7, 304.0], [66.8, 304.0], [66.9, 304.0], [67.0, 304.0], [67.1, 304.0], [67.2, 304.0], [67.3, 304.0], [67.4, 304.0], [67.5, 304.0], [67.6, 304.0], [67.7, 304.0], [67.8, 304.0], [67.9, 304.0], [68.0, 304.0], [68.1, 304.0], [68.2, 304.0], [68.3, 304.0], [68.4, 304.0], [68.5, 304.0], [68.6, 304.0], [68.7, 304.0], [68.8, 304.0], [68.9, 304.0], [69.0, 304.0], [69.1, 304.0], [69.2, 304.0], [69.3, 304.0], [69.4, 304.0], [69.5, 304.0], [69.6, 304.0], [69.7, 304.0], [69.8, 304.0], [69.9, 304.0], [70.0, 304.0], [70.1, 304.0], [70.2, 304.0], [70.3, 304.0], [70.4, 304.0], [70.5, 304.0], [70.6, 304.0], [70.7, 304.0], [70.8, 304.0], [70.9, 304.0], [71.0, 304.0], [71.1, 304.0], [71.2, 304.0], [71.3, 304.0], [71.4, 304.0], [71.5, 304.0], [71.6, 304.0], [71.7, 304.0], [71.8, 305.0], [71.9, 305.0], [72.0, 305.0], [72.1, 305.0], [72.2, 305.0], [72.3, 305.0], [72.4, 305.0], [72.5, 305.0], [72.6, 305.0], [72.7, 305.0], [72.8, 305.0], [72.9, 305.0], [73.0, 305.0], [73.1, 305.0], [73.2, 305.0], [73.3, 305.0], [73.4, 305.0], [73.5, 305.0], [73.6, 305.0], [73.7, 305.0], [73.8, 305.0], [73.9, 305.0], [74.0, 305.0], [74.1, 305.0], [74.2, 305.0], [74.3, 305.0], [74.4, 305.0], [74.5, 305.0], [74.6, 305.0], [74.7, 305.0], [74.8, 305.0], [74.9, 305.0], [75.0, 305.0], [75.1, 305.0], [75.2, 305.0], [75.3, 305.0], [75.4, 305.0], [75.5, 305.0], [75.6, 305.0], [75.7, 305.0], [75.8, 305.0], [75.9, 305.0], [76.0, 305.0], [76.1, 305.0], [76.2, 306.0], [76.3, 306.0], [76.4, 306.0], [76.5, 306.0], [76.6, 306.0], [76.7, 306.0], [76.8, 306.0], [76.9, 306.0], [77.0, 306.0], [77.1, 306.0], [77.2, 306.0], [77.3, 306.0], [77.4, 306.0], [77.5, 306.0], [77.6, 306.0], [77.7, 306.0], [77.8, 306.0], [77.9, 306.0], [78.0, 306.0], [78.1, 306.0], [78.2, 306.0], [78.3, 306.0], [78.4, 306.0], [78.5, 306.0], [78.6, 306.0], [78.7, 306.0], [78.8, 307.0], [78.9, 307.0], [79.0, 307.0], [79.1, 307.0], [79.2, 307.0], [79.3, 307.0], [79.4, 307.0], [79.5, 307.0], [79.6, 307.0], [79.7, 307.0], [79.8, 307.0], [79.9, 307.0], [80.0, 308.0], [80.1, 308.0], [80.2, 308.0], [80.3, 308.0], [80.4, 308.0], [80.5, 308.0], [80.6, 308.0], [80.7, 308.0], [80.8, 308.0], [80.9, 308.0], [81.0, 308.0], [81.1, 308.0], [81.2, 308.0], [81.3, 308.0], [81.4, 309.0], [81.5, 309.0], [81.6, 309.0], [81.7, 309.0], [81.8, 310.0], [81.9, 310.0], [82.0, 311.0], [82.1, 311.0], [82.2, 311.0], [82.3, 311.0], [82.4, 311.0], [82.5, 311.0], [82.6, 312.0], [82.7, 312.0], [82.8, 312.0], [82.9, 313.0], [83.0, 313.0], [83.1, 315.0], [83.2, 315.0], [83.3, 316.0], [83.4, 316.0], [83.5, 316.0], [83.6, 319.0], [83.7, 319.0], [83.8, 319.0], [83.9, 320.0], [84.0, 321.0], [84.1, 322.0], [84.2, 324.0], [84.3, 324.0], [84.4, 325.0], [84.5, 326.0], [84.6, 328.0], [84.7, 329.0], [84.8, 330.0], [84.9, 330.0], [85.0, 330.0], [85.1, 331.0], [85.2, 333.0], [85.3, 333.0], [85.4, 335.0], [85.5, 335.0], [85.6, 337.0], [85.7, 338.0], [85.8, 344.0], [85.9, 346.0], [86.0, 348.0], [86.1, 348.0], [86.2, 349.0], [86.3, 353.0], [86.4, 358.0], [86.5, 360.0], [86.6, 361.0], [86.7, 361.0], [86.8, 363.0], [86.9, 367.0], [87.0, 371.0], [87.1, 372.0], [87.2, 374.0], [87.3, 375.0], [87.4, 375.0], [87.5, 376.0], [87.6, 377.0], [87.7, 377.0], [87.8, 380.0], [87.9, 380.0], [88.0, 381.0], [88.1, 382.0], [88.2, 383.0], [88.3, 383.0], [88.4, 384.0], [88.5, 384.0], [88.6, 385.0], [88.7, 385.0], [88.8, 387.0], [88.9, 387.0], [89.0, 389.0], [89.1, 389.0], [89.2, 389.0], [89.3, 390.0], [89.4, 391.0], [89.5, 391.0], [89.6, 393.0], [89.7, 393.0], [89.8, 394.0], [89.9, 394.0], [90.0, 394.0], [90.1, 395.0], [90.2, 396.0], [90.3, 396.0], [90.4, 397.0], [90.5, 397.0], [90.6, 398.0], [90.7, 399.0], [90.8, 400.0], [90.9, 401.0], [91.0, 402.0], [91.1, 402.0], [91.2, 403.0], [91.3, 403.0], [91.4, 403.0], [91.5, 403.0], [91.6, 403.0], [91.7, 403.0], [91.8, 404.0], [91.9, 404.0], [92.0, 404.0], [92.1, 404.0], [92.2, 404.0], [92.3, 405.0], [92.4, 405.0], [92.5, 405.0], [92.6, 405.0], [92.7, 405.0], [92.8, 405.0], [92.9, 405.0], [93.0, 405.0], [93.1, 405.0], [93.2, 405.0], [93.3, 406.0], [93.4, 406.0], [93.5, 406.0], [93.6, 406.0], [93.7, 406.0], [93.8, 406.0], [93.9, 406.0], [94.0, 406.0], [94.1, 406.0], [94.2, 407.0], [94.3, 407.0], [94.4, 407.0], [94.5, 407.0], [94.6, 407.0], [94.7, 408.0], [94.8, 408.0], [94.9, 408.0], [95.0, 408.0], [95.1, 408.0], [95.2, 409.0], [95.3, 409.0], [95.4, 409.0], [95.5, 410.0], [95.6, 412.0], [95.7, 415.0], [95.8, 419.0], [95.9, 425.0], [96.0, 456.0], [96.1, 476.0], [96.2, 496.0], [96.3, 506.0], [96.4, 507.0], [96.5, 508.0], [96.6, 509.0], [96.7, 510.0], [96.8, 510.0], [96.9, 512.0], [97.0, 513.0], [97.1, 528.0], [97.2, 565.0], [97.3, 566.0], [97.4, 623.0], [97.5, 653.0], [97.6, 681.0], [97.7, 690.0], [97.8, 710.0], [97.9, 714.0], [98.0, 740.0], [98.1, 816.0], [98.2, 841.0], [98.3, 880.0], [98.4, 934.0], [98.5, 964.0], [98.6, 1008.0], [98.7, 1018.0], [98.8, 1115.0], [98.9, 1159.0], [99.0, 1223.0], [99.1, 1328.0], [99.2, 1532.0], [99.3, 1543.0], [99.4, 1634.0], [99.5, 1737.0], [99.6, 1744.0], [99.7, 1824.0], [99.8, 6036.0], [99.9, 7987.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[0.0, 514.0], [0.1, 514.0], [0.2, 515.0], [0.3, 516.0], [0.4, 516.0], [0.5, 517.0], [0.6, 518.0], [0.7, 518.0], [0.8, 518.0], [0.9, 518.0], [1.0, 518.0], [1.1, 518.0], [1.2, 518.0], [1.3, 518.0], [1.4, 519.0], [1.5, 519.0], [1.6, 519.0], [1.7, 519.0], [1.8, 519.0], [1.9, 520.0], [2.0, 520.0], [2.1, 520.0], [2.2, 520.0], [2.3, 520.0], [2.4, 520.0], [2.5, 521.0], [2.6, 521.0], [2.7, 521.0], [2.8, 521.0], [2.9, 521.0], [3.0, 522.0], [3.1, 522.0], [3.2, 522.0], [3.3, 523.0], [3.4, 523.0], [3.5, 523.0], [3.6, 523.0], [3.7, 523.0], [3.8, 523.0], [3.9, 523.0], [4.0, 524.0], [4.1, 524.0], [4.2, 524.0], [4.3, 524.0], [4.4, 524.0], [4.5, 524.0], [4.6, 525.0], [4.7, 525.0], [4.8, 525.0], [4.9, 525.0], [5.0, 525.0], [5.1, 525.0], [5.2, 525.0], [5.3, 526.0], [5.4, 526.0], [5.5, 526.0], [5.6, 526.0], [5.7, 526.0], [5.8, 526.0], [5.9, 527.0], [6.0, 527.0], [6.1, 527.0], [6.2, 527.0], [6.3, 527.0], [6.4, 528.0], [6.5, 528.0], [6.6, 528.0], [6.7, 528.0], [6.8, 528.0], [6.9, 528.0], [7.0, 529.0], [7.1, 529.0], [7.2, 529.0], [7.3, 529.0], [7.4, 530.0], [7.5, 530.0], [7.6, 530.0], [7.7, 530.0], [7.8, 530.0], [7.9, 530.0], [8.0, 530.0], [8.1, 530.0], [8.2, 530.0], [8.3, 531.0], [8.4, 531.0], [8.5, 531.0], [8.6, 531.0], [8.7, 531.0], [8.8, 531.0], [8.9, 531.0], [9.0, 531.0], [9.1, 531.0], [9.2, 531.0], [9.3, 532.0], [9.4, 532.0], [9.5, 532.0], [9.6, 532.0], [9.7, 532.0], [9.8, 532.0], [9.9, 532.0], [10.0, 533.0], [10.1, 533.0], [10.2, 533.0], [10.3, 533.0], [10.4, 533.0], [10.5, 533.0], [10.6, 533.0], [10.7, 533.0], [10.8, 534.0], [10.9, 534.0], [11.0, 534.0], [11.1, 534.0], [11.2, 534.0], [11.3, 534.0], [11.4, 535.0], [11.5, 535.0], [11.6, 535.0], [11.7, 535.0], [11.8, 535.0], [11.9, 535.0], [12.0, 536.0], [12.1, 536.0], [12.2, 536.0], [12.3, 536.0], [12.4, 537.0], [12.5, 537.0], [12.6, 537.0], [12.7, 538.0], [12.8, 538.0], [12.9, 538.0], [13.0, 539.0], [13.1, 539.0], [13.2, 539.0], [13.3, 540.0], [13.4, 540.0], [13.5, 540.0], [13.6, 540.0], [13.7, 540.0], [13.8, 540.0], [13.9, 540.0], [14.0, 541.0], [14.1, 542.0], [14.2, 542.0], [14.3, 543.0], [14.4, 543.0], [14.5, 543.0], [14.6, 543.0], [14.7, 543.0], [14.8, 544.0], [14.9, 544.0], [15.0, 545.0], [15.1, 545.0], [15.2, 545.0], [15.3, 545.0], [15.4, 545.0], [15.5, 546.0], [15.6, 546.0], [15.7, 546.0], [15.8, 547.0], [15.9, 547.0], [16.0, 547.0], [16.1, 548.0], [16.2, 548.0], [16.3, 549.0], [16.4, 549.0], [16.5, 549.0], [16.6, 549.0], [16.7, 549.0], [16.8, 550.0], [16.9, 551.0], [17.0, 551.0], [17.1, 551.0], [17.2, 551.0], [17.3, 551.0], [17.4, 552.0], [17.5, 552.0], [17.6, 553.0], [17.7, 554.0], [17.8, 554.0], [17.9, 555.0], [18.0, 555.0], [18.1, 555.0], [18.2, 556.0], [18.3, 556.0], [18.4, 556.0], [18.5, 556.0], [18.6, 556.0], [18.7, 556.0], [18.8, 557.0], [18.9, 557.0], [19.0, 558.0], [19.1, 558.0], [19.2, 559.0], [19.3, 559.0], [19.4, 559.0], [19.5, 559.0], [19.6, 559.0], [19.7, 560.0], [19.8, 560.0], [19.9, 560.0], [20.0, 560.0], [20.1, 561.0], [20.2, 561.0], [20.3, 561.0], [20.4, 562.0], [20.5, 562.0], [20.6, 562.0], [20.7, 563.0], [20.8, 563.0], [20.9, 563.0], [21.0, 564.0], [21.1, 564.0], [21.2, 564.0], [21.3, 564.0], [21.4, 564.0], [21.5, 564.0], [21.6, 564.0], [21.7, 565.0], [21.8, 565.0], [21.9, 566.0], [22.0, 566.0], [22.1, 566.0], [22.2, 566.0], [22.3, 567.0], [22.4, 567.0], [22.5, 567.0], [22.6, 567.0], [22.7, 568.0], [22.8, 568.0], [22.9, 568.0], [23.0, 568.0], [23.1, 568.0], [23.2, 569.0], [23.3, 569.0], [23.4, 569.0], [23.5, 569.0], [23.6, 570.0], [23.7, 570.0], [23.8, 571.0], [23.9, 571.0], [24.0, 572.0], [24.1, 572.0], [24.2, 572.0], [24.3, 573.0], [24.4, 573.0], [24.5, 573.0], [24.6, 573.0], [24.7, 574.0], [24.8, 574.0], [24.9, 574.0], [25.0, 574.0], [25.1, 574.0], [25.2, 575.0], [25.3, 575.0], [25.4, 575.0], [25.5, 575.0], [25.6, 576.0], [25.7, 576.0], [25.8, 576.0], [25.9, 577.0], [26.0, 577.0], [26.1, 577.0], [26.2, 578.0], [26.3, 579.0], [26.4, 580.0], [26.5, 582.0], [26.6, 583.0], [26.7, 583.0], [26.8, 584.0], [26.9, 584.0], [27.0, 585.0], [27.1, 585.0], [27.2, 586.0], [27.3, 587.0], [27.4, 587.0], [27.5, 588.0], [27.6, 588.0], [27.7, 589.0], [27.8, 589.0], [27.9, 590.0], [28.0, 590.0], [28.1, 591.0], [28.2, 592.0], [28.3, 592.0], [28.4, 593.0], [28.5, 593.0], [28.6, 594.0], [28.7, 594.0], [28.8, 594.0], [28.9, 596.0], [29.0, 596.0], [29.1, 596.0], [29.2, 597.0], [29.3, 600.0], [29.4, 600.0], [29.5, 601.0], [29.6, 601.0], [29.7, 601.0], [29.8, 602.0], [29.9, 602.0], [30.0, 602.0], [30.1, 603.0], [30.2, 604.0], [30.3, 604.0], [30.4, 604.0], [30.5, 604.0], [30.6, 605.0], [30.7, 605.0], [30.8, 606.0], [30.9, 606.0], [31.0, 606.0], [31.1, 607.0], [31.2, 607.0], [31.3, 607.0], [31.4, 607.0], [31.5, 607.0], [31.6, 608.0], [31.7, 608.0], [31.8, 609.0], [31.9, 609.0], [32.0, 609.0], [32.1, 609.0], [32.2, 610.0], [32.3, 610.0], [32.4, 610.0], [32.5, 610.0], [32.6, 611.0], [32.7, 611.0], [32.8, 611.0], [32.9, 611.0], [33.0, 611.0], [33.1, 612.0], [33.2, 612.0], [33.3, 612.0], [33.4, 612.0], [33.5, 612.0], [33.6, 612.0], [33.7, 612.0], [33.8, 613.0], [33.9, 613.0], [34.0, 613.0], [34.1, 613.0], [34.2, 613.0], [34.3, 613.0], [34.4, 614.0], [34.5, 614.0], [34.6, 614.0], [34.7, 614.0], [34.8, 614.0], [34.9, 614.0], [35.0, 614.0], [35.1, 614.0], [35.2, 614.0], [35.3, 614.0], [35.4, 614.0], [35.5, 614.0], [35.6, 614.0], [35.7, 614.0], [35.8, 614.0], [35.9, 614.0], [36.0, 614.0], [36.1, 614.0], [36.2, 614.0], [36.3, 615.0], [36.4, 615.0], [36.5, 615.0], [36.6, 615.0], [36.7, 615.0], [36.8, 615.0], [36.9, 615.0], [37.0, 615.0], [37.1, 615.0], [37.2, 615.0], [37.3, 615.0], [37.4, 615.0], [37.5, 615.0], [37.6, 615.0], [37.7, 615.0], [37.8, 615.0], [37.9, 615.0], [38.0, 615.0], [38.1, 615.0], [38.2, 615.0], [38.3, 615.0], [38.4, 615.0], [38.5, 615.0], [38.6, 615.0], [38.7, 615.0], [38.8, 615.0], [38.9, 615.0], [39.0, 615.0], [39.1, 615.0], [39.2, 615.0], [39.3, 615.0], [39.4, 615.0], [39.5, 615.0], [39.6, 615.0], [39.7, 615.0], [39.8, 615.0], [39.9, 616.0], [40.0, 616.0], [40.1, 616.0], [40.2, 616.0], [40.3, 616.0], [40.4, 616.0], [40.5, 616.0], [40.6, 616.0], [40.7, 616.0], [40.8, 616.0], [40.9, 616.0], [41.0, 616.0], [41.1, 616.0], [41.2, 616.0], [41.3, 616.0], [41.4, 616.0], [41.5, 616.0], [41.6, 616.0], [41.7, 616.0], [41.8, 616.0], [41.9, 616.0], [42.0, 616.0], [42.1, 616.0], [42.2, 616.0], [42.3, 616.0], [42.4, 616.0], [42.5, 616.0], [42.6, 616.0], [42.7, 616.0], [42.8, 616.0], [42.9, 616.0], [43.0, 616.0], [43.1, 616.0], [43.2, 616.0], [43.3, 616.0], [43.4, 616.0], [43.5, 616.0], [43.6, 616.0], [43.7, 616.0], [43.8, 616.0], [43.9, 616.0], [44.0, 616.0], [44.1, 616.0], [44.2, 616.0], [44.3, 616.0], [44.4, 616.0], [44.5, 616.0], [44.6, 616.0], [44.7, 616.0], [44.8, 616.0], [44.9, 616.0], [45.0, 616.0], [45.1, 616.0], [45.2, 616.0], [45.3, 616.0], [45.4, 616.0], [45.5, 616.0], [45.6, 616.0], [45.7, 617.0], [45.8, 617.0], [45.9, 617.0], [46.0, 617.0], [46.1, 617.0], [46.2, 617.0], [46.3, 617.0], [46.4, 617.0], [46.5, 617.0], [46.6, 617.0], [46.7, 617.0], [46.8, 617.0], [46.9, 617.0], [47.0, 617.0], [47.1, 617.0], [47.2, 617.0], [47.3, 617.0], [47.4, 617.0], [47.5, 617.0], [47.6, 617.0], [47.7, 617.0], [47.8, 617.0], [47.9, 617.0], [48.0, 617.0], [48.1, 617.0], [48.2, 617.0], [48.3, 617.0], [48.4, 617.0], [48.5, 617.0], [48.6, 617.0], [48.7, 617.0], [48.8, 617.0], [48.9, 617.0], [49.0, 617.0], [49.1, 617.0], [49.2, 617.0], [49.3, 617.0], [49.4, 617.0], [49.5, 617.0], [49.6, 617.0], [49.7, 617.0], [49.8, 617.0], [49.9, 617.0], [50.0, 617.0], [50.1, 617.0], [50.2, 617.0], [50.3, 617.0], [50.4, 617.0], [50.5, 617.0], [50.6, 617.0], [50.7, 617.0], [50.8, 617.0], [50.9, 617.0], [51.0, 617.0], [51.1, 617.0], [51.2, 617.0], [51.3, 617.0], [51.4, 617.0], [51.5, 617.0], [51.6, 617.0], [51.7, 617.0], [51.8, 617.0], [51.9, 617.0], [52.0, 617.0], [52.1, 617.0], [52.2, 617.0], [52.3, 617.0], [52.4, 617.0], [52.5, 617.0], [52.6, 617.0], [52.7, 617.0], [52.8, 617.0], [52.9, 617.0], [53.0, 617.0], [53.1, 617.0], [53.2, 618.0], [53.3, 618.0], [53.4, 618.0], [53.5, 618.0], [53.6, 618.0], [53.7, 618.0], [53.8, 618.0], [53.9, 618.0], [54.0, 618.0], [54.1, 618.0], [54.2, 618.0], [54.3, 618.0], [54.4, 618.0], [54.5, 618.0], [54.6, 618.0], [54.7, 618.0], [54.8, 618.0], [54.9, 618.0], [55.0, 618.0], [55.1, 618.0], [55.2, 618.0], [55.3, 618.0], [55.4, 618.0], [55.5, 618.0], [55.6, 618.0], [55.7, 618.0], [55.8, 618.0], [55.9, 618.0], [56.0, 618.0], [56.1, 618.0], [56.2, 618.0], [56.3, 618.0], [56.4, 618.0], [56.5, 618.0], [56.6, 618.0], [56.7, 618.0], [56.8, 618.0], [56.9, 618.0], [57.0, 618.0], [57.1, 618.0], [57.2, 618.0], [57.3, 618.0], [57.4, 618.0], [57.5, 618.0], [57.6, 618.0], [57.7, 618.0], [57.8, 618.0], [57.9, 618.0], [58.0, 618.0], [58.1, 618.0], [58.2, 618.0], [58.3, 618.0], [58.4, 618.0], [58.5, 618.0], [58.6, 618.0], [58.7, 618.0], [58.8, 618.0], [58.9, 618.0], [59.0, 619.0], [59.1, 619.0], [59.2, 619.0], [59.3, 619.0], [59.4, 619.0], [59.5, 619.0], [59.6, 619.0], [59.7, 619.0], [59.8, 619.0], [59.9, 619.0], [60.0, 619.0], [60.1, 619.0], [60.2, 619.0], [60.3, 619.0], [60.4, 619.0], [60.5, 619.0], [60.6, 619.0], [60.7, 619.0], [60.8, 619.0], [60.9, 619.0], [61.0, 619.0], [61.1, 619.0], [61.2, 619.0], [61.3, 619.0], [61.4, 619.0], [61.5, 619.0], [61.6, 620.0], [61.7, 620.0], [61.8, 620.0], [61.9, 620.0], [62.0, 620.0], [62.1, 620.0], [62.2, 620.0], [62.3, 620.0], [62.4, 620.0], [62.5, 620.0], [62.6, 620.0], [62.7, 620.0], [62.8, 620.0], [62.9, 620.0], [63.0, 620.0], [63.1, 620.0], [63.2, 620.0], [63.3, 620.0], [63.4, 621.0], [63.5, 621.0], [63.6, 621.0], [63.7, 621.0], [63.8, 621.0], [63.9, 621.0], [64.0, 621.0], [64.1, 621.0], [64.2, 621.0], [64.3, 621.0], [64.4, 621.0], [64.5, 621.0], [64.6, 621.0], [64.7, 621.0], [64.8, 622.0], [64.9, 622.0], [65.0, 622.0], [65.1, 622.0], [65.2, 623.0], [65.3, 623.0], [65.4, 623.0], [65.5, 623.0], [65.6, 624.0], [65.7, 624.0], [65.8, 624.0], [65.9, 624.0], [66.0, 624.0], [66.1, 625.0], [66.2, 625.0], [66.3, 625.0], [66.4, 626.0], [66.5, 626.0], [66.6, 626.0], [66.7, 626.0], [66.8, 626.0], [66.9, 627.0], [67.0, 627.0], [67.1, 627.0], [67.2, 628.0], [67.3, 629.0], [67.4, 629.0], [67.5, 629.0], [67.6, 630.0], [67.7, 630.0], [67.8, 631.0], [67.9, 632.0], [68.0, 632.0], [68.1, 632.0], [68.2, 633.0], [68.3, 633.0], [68.4, 633.0], [68.5, 633.0], [68.6, 634.0], [68.7, 634.0], [68.8, 635.0], [68.9, 635.0], [69.0, 636.0], [69.1, 636.0], [69.2, 637.0], [69.3, 638.0], [69.4, 638.0], [69.5, 639.0], [69.6, 640.0], [69.7, 640.0], [69.8, 641.0], [69.9, 641.0], [70.0, 642.0], [70.1, 643.0], [70.2, 644.0], [70.3, 644.0], [70.4, 645.0], [70.5, 646.0], [70.6, 648.0], [70.7, 648.0], [70.8, 649.0], [70.9, 650.0], [71.0, 651.0], [71.1, 652.0], [71.2, 653.0], [71.3, 653.0], [71.4, 654.0], [71.5, 654.0], [71.6, 656.0], [71.7, 656.0], [71.8, 658.0], [71.9, 660.0], [72.0, 661.0], [72.1, 662.0], [72.2, 662.0], [72.3, 665.0], [72.4, 665.0], [72.5, 667.0], [72.6, 667.0], [72.7, 669.0], [72.8, 669.0], [72.9, 669.0], [73.0, 670.0], [73.1, 670.0], [73.2, 671.0], [73.3, 672.0], [73.4, 673.0], [73.5, 673.0], [73.6, 674.0], [73.7, 674.0], [73.8, 675.0], [73.9, 676.0], [74.0, 677.0], [74.1, 677.0], [74.2, 678.0], [74.3, 678.0], [74.4, 678.0], [74.5, 679.0], [74.6, 679.0], [74.7, 690.0], [74.8, 694.0], [74.9, 696.0], [75.0, 696.0], [75.1, 701.0], [75.2, 701.0], [75.3, 704.0], [75.4, 705.0], [75.5, 706.0], [75.6, 707.0], [75.7, 707.0], [75.8, 708.0], [75.9, 712.0], [76.0, 712.0], [76.1, 714.0], [76.2, 714.0], [76.3, 714.0], [76.4, 714.0], [76.5, 715.0], [76.6, 715.0], [76.7, 715.0], [76.8, 716.0], [76.9, 716.0], [77.0, 716.0], [77.1, 717.0], [77.2, 717.0], [77.3, 717.0], [77.4, 717.0], [77.5, 717.0], [77.6, 717.0], [77.7, 717.0], [77.8, 717.0], [77.9, 717.0], [78.0, 717.0], [78.1, 717.0], [78.2, 717.0], [78.3, 718.0], [78.4, 718.0], [78.5, 718.0], [78.6, 718.0], [78.7, 718.0], [78.8, 718.0], [78.9, 718.0], [79.0, 718.0], [79.1, 718.0], [79.2, 718.0], [79.3, 718.0], [79.4, 718.0], [79.5, 718.0], [79.6, 718.0], [79.7, 718.0], [79.8, 718.0], [79.9, 718.0], [80.0, 718.0], [80.1, 718.0], [80.2, 719.0], [80.3, 719.0], [80.4, 719.0], [80.5, 719.0], [80.6, 719.0], [80.7, 719.0], [80.8, 719.0], [80.9, 719.0], [81.0, 719.0], [81.1, 719.0], [81.2, 719.0], [81.3, 719.0], [81.4, 719.0], [81.5, 719.0], [81.6, 719.0], [81.7, 719.0], [81.8, 719.0], [81.9, 720.0], [82.0, 720.0], [82.1, 720.0], [82.2, 720.0], [82.3, 720.0], [82.4, 720.0], [82.5, 720.0], [82.6, 720.0], [82.7, 720.0], [82.8, 720.0], [82.9, 720.0], [83.0, 720.0], [83.1, 720.0], [83.2, 720.0], [83.3, 720.0], [83.4, 721.0], [83.5, 721.0], [83.6, 721.0], [83.7, 721.0], [83.8, 721.0], [83.9, 721.0], [84.0, 721.0], [84.1, 721.0], [84.2, 721.0], [84.3, 721.0], [84.4, 721.0], [84.5, 721.0], [84.6, 722.0], [84.7, 722.0], [84.8, 722.0], [84.9, 722.0], [85.0, 722.0], [85.1, 723.0], [85.2, 723.0], [85.3, 724.0], [85.4, 724.0], [85.5, 724.0], [85.6, 724.0], [85.7, 725.0], [85.8, 725.0], [85.9, 726.0], [86.0, 726.0], [86.1, 728.0], [86.2, 728.0], [86.3, 729.0], [86.4, 729.0], [86.5, 730.0], [86.6, 731.0], [86.7, 732.0], [86.8, 733.0], [86.9, 734.0], [87.0, 735.0], [87.1, 739.0], [87.2, 739.0], [87.3, 743.0], [87.4, 743.0], [87.5, 749.0], [87.6, 751.0], [87.7, 752.0], [87.8, 759.0], [87.9, 761.0], [88.0, 764.0], [88.1, 765.0], [88.2, 765.0], [88.3, 768.0], [88.4, 771.0], [88.5, 773.0], [88.6, 775.0], [88.7, 775.0], [88.8, 777.0], [88.9, 779.0], [89.0, 779.0], [89.1, 780.0], [89.2, 784.0], [89.3, 789.0], [89.4, 790.0], [89.5, 796.0], [89.6, 797.0], [89.7, 812.0], [89.8, 815.0], [89.9, 816.0], [90.0, 817.0], [90.1, 818.0], [90.2, 818.0], [90.3, 819.0], [90.4, 819.0], [90.5, 819.0], [90.6, 819.0], [90.7, 820.0], [90.8, 820.0], [90.9, 821.0], [91.0, 821.0], [91.1, 821.0], [91.2, 821.0], [91.3, 821.0], [91.4, 821.0], [91.5, 821.0], [91.6, 821.0], [91.7, 821.0], [91.8, 821.0], [91.9, 821.0], [92.0, 821.0], [92.1, 821.0], [92.2, 822.0], [92.3, 822.0], [92.4, 822.0], [92.5, 822.0], [92.6, 822.0], [92.7, 823.0], [92.8, 823.0], [92.9, 824.0], [93.0, 824.0], [93.1, 824.0], [93.2, 824.0], [93.3, 825.0], [93.4, 825.0], [93.5, 826.0], [93.6, 826.0], [93.7, 826.0], [93.8, 826.0], [93.9, 827.0], [94.0, 827.0], [94.1, 833.0], [94.2, 833.0], [94.3, 838.0], [94.4, 865.0], [94.5, 870.0], [94.6, 878.0], [94.7, 882.0], [94.8, 883.0], [94.9, 887.0], [95.0, 893.0], [95.1, 897.0], [95.2, 905.0], [95.3, 912.0], [95.4, 917.0], [95.5, 919.0], [95.6, 921.0], [95.7, 921.0], [95.8, 922.0], [95.9, 922.0], [96.0, 923.0], [96.1, 923.0], [96.2, 924.0], [96.3, 925.0], [96.4, 925.0], [96.5, 926.0], [96.6, 926.0], [96.7, 926.0], [96.8, 927.0], [96.9, 928.0], [97.0, 928.0], [97.1, 931.0], [97.2, 942.0], [97.3, 955.0], [97.4, 968.0], [97.5, 995.0], [97.6, 1026.0], [97.7, 1026.0], [97.8, 1027.0], [97.9, 1032.0], [98.0, 1035.0], [98.1, 1049.0], [98.2, 1070.0], [98.3, 1096.0], [98.4, 1104.0], [98.5, 1117.0], [98.6, 1129.0], [98.7, 1132.0], [98.8, 1177.0], [98.9, 1245.0], [99.0, 1433.0], [99.1, 1434.0], [99.2, 1441.0], [99.3, 1453.0], [99.4, 1481.0], [99.5, 1553.0], [99.6, 1644.0], [99.7, 1712.0], [99.8, 6194.0], [99.9, 6374.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[0.0, 141.0], [0.1, 141.0], [0.2, 142.0], [0.3, 143.0], [0.4, 143.0], [0.5, 143.0], [0.6, 144.0], [0.7, 144.0], [0.8, 145.0], [0.9, 145.0], [1.0, 145.0], [1.1, 145.0], [1.2, 145.0], [1.3, 145.0], [1.4, 146.0], [1.5, 146.0], [1.6, 146.0], [1.7, 146.0], [1.8, 146.0], [1.9, 146.0], [2.0, 146.0], [2.1, 146.0], [2.2, 147.0], [2.3, 147.0], [2.4, 147.0], [2.5, 147.0], [2.6, 147.0], [2.7, 147.0], [2.8, 147.0], [2.9, 147.0], [3.0, 147.0], [3.1, 148.0], [3.2, 148.0], [3.3, 148.0], [3.4, 148.0], [3.5, 149.0], [3.6, 149.0], [3.7, 149.0], [3.8, 149.0], [3.9, 149.0], [4.0, 149.0], [4.1, 149.0], [4.2, 149.0], [4.3, 149.0], [4.4, 150.0], [4.5, 150.0], [4.6, 150.0], [4.7, 150.0], [4.8, 150.0], [4.9, 151.0], [5.0, 151.0], [5.1, 151.0], [5.2, 151.0], [5.3, 151.0], [5.4, 152.0], [5.5, 152.0], [5.6, 152.0], [5.7, 152.0], [5.8, 152.0], [5.9, 153.0], [6.0, 153.0], [6.1, 153.0], [6.2, 153.0], [6.3, 153.0], [6.4, 154.0], [6.5, 154.0], [6.6, 154.0], [6.7, 155.0], [6.8, 155.0], [6.9, 155.0], [7.0, 155.0], [7.1, 155.0], [7.2, 156.0], [7.3, 156.0], [7.4, 156.0], [7.5, 156.0], [7.6, 156.0], [7.7, 156.0], [7.8, 157.0], [7.9, 157.0], [8.0, 157.0], [8.1, 157.0], [8.2, 158.0], [8.3, 158.0], [8.4, 158.0], [8.5, 158.0], [8.6, 159.0], [8.7, 159.0], [8.8, 159.0], [8.9, 159.0], [9.0, 159.0], [9.1, 159.0], [9.2, 159.0], [9.3, 159.0], [9.4, 159.0], [9.5, 159.0], [9.6, 159.0], [9.7, 159.0], [9.8, 159.0], [9.9, 160.0], [10.0, 160.0], [10.1, 160.0], [10.2, 160.0], [10.3, 160.0], [10.4, 161.0], [10.5, 161.0], [10.6, 161.0], [10.7, 161.0], [10.8, 161.0], [10.9, 161.0], [11.0, 162.0], [11.1, 162.0], [11.2, 162.0], [11.3, 162.0], [11.4, 163.0], [11.5, 163.0], [11.6, 163.0], [11.7, 163.0], [11.8, 163.0], [11.9, 164.0], [12.0, 164.0], [12.1, 164.0], [12.2, 164.0], [12.3, 164.0], [12.4, 165.0], [12.5, 165.0], [12.6, 165.0], [12.7, 165.0], [12.8, 166.0], [12.9, 166.0], [13.0, 166.0], [13.1, 166.0], [13.2, 166.0], [13.3, 167.0], [13.4, 167.0], [13.5, 167.0], [13.6, 167.0], [13.7, 168.0], [13.8, 168.0], [13.9, 168.0], [14.0, 168.0], [14.1, 169.0], [14.2, 169.0], [14.3, 169.0], [14.4, 170.0], [14.5, 170.0], [14.6, 170.0], [14.7, 170.0], [14.8, 170.0], [14.9, 171.0], [15.0, 171.0], [15.1, 172.0], [15.2, 172.0], [15.3, 172.0], [15.4, 172.0], [15.5, 173.0], [15.6, 173.0], [15.7, 173.0], [15.8, 174.0], [15.9, 174.0], [16.0, 174.0], [16.1, 175.0], [16.2, 175.0], [16.3, 175.0], [16.4, 175.0], [16.5, 175.0], [16.6, 176.0], [16.7, 176.0], [16.8, 176.0], [16.9, 177.0], [17.0, 177.0], [17.1, 177.0], [17.2, 178.0], [17.3, 178.0], [17.4, 178.0], [17.5, 178.0], [17.6, 178.0], [17.7, 179.0], [17.8, 179.0], [17.9, 179.0], [18.0, 179.0], [18.1, 180.0], [18.2, 180.0], [18.3, 181.0], [18.4, 181.0], [18.5, 181.0], [18.6, 181.0], [18.7, 182.0], [18.8, 182.0], [18.9, 183.0], [19.0, 183.0], [19.1, 183.0], [19.2, 183.0], [19.3, 184.0], [19.4, 184.0], [19.5, 184.0], [19.6, 184.0], [19.7, 185.0], [19.8, 185.0], [19.9, 185.0], [20.0, 186.0], [20.1, 186.0], [20.2, 186.0], [20.3, 186.0], [20.4, 186.0], [20.5, 187.0], [20.6, 187.0], [20.7, 187.0], [20.8, 187.0], [20.9, 187.0], [21.0, 187.0], [21.1, 187.0], [21.2, 187.0], [21.3, 188.0], [21.4, 188.0], [21.5, 188.0], [21.6, 188.0], [21.7, 188.0], [21.8, 189.0], [21.9, 189.0], [22.0, 189.0], [22.1, 189.0], [22.2, 189.0], [22.3, 190.0], [22.4, 190.0], [22.5, 190.0], [22.6, 190.0], [22.7, 190.0], [22.8, 190.0], [22.9, 191.0], [23.0, 191.0], [23.1, 191.0], [23.2, 191.0], [23.3, 191.0], [23.4, 192.0], [23.5, 192.0], [23.6, 192.0], [23.7, 192.0], [23.8, 193.0], [23.9, 193.0], [24.0, 193.0], [24.1, 193.0], [24.2, 194.0], [24.3, 194.0], [24.4, 194.0], [24.5, 194.0], [24.6, 195.0], [24.7, 195.0], [24.8, 195.0], [24.9, 195.0], [25.0, 195.0], [25.1, 195.0], [25.2, 196.0], [25.3, 196.0], [25.4, 196.0], [25.5, 196.0], [25.6, 196.0], [25.7, 196.0], [25.8, 196.0], [25.9, 196.0], [26.0, 196.0], [26.1, 196.0], [26.2, 197.0], [26.3, 197.0], [26.4, 197.0], [26.5, 197.0], [26.6, 197.0], [26.7, 197.0], [26.8, 197.0], [26.9, 197.0], [27.0, 197.0], [27.1, 197.0], [27.2, 198.0], [27.3, 198.0], [27.4, 198.0], [27.5, 198.0], [27.6, 198.0], [27.7, 198.0], [27.8, 198.0], [27.9, 198.0], [28.0, 199.0], [28.1, 199.0], [28.2, 199.0], [28.3, 199.0], [28.4, 199.0], [28.5, 199.0], [28.6, 199.0], [28.7, 199.0], [28.8, 199.0], [28.9, 199.0], [29.0, 199.0], [29.1, 200.0], [29.2, 200.0], [29.3, 200.0], [29.4, 200.0], [29.5, 200.0], [29.6, 200.0], [29.7, 200.0], [29.8, 200.0], [29.9, 200.0], [30.0, 200.0], [30.1, 200.0], [30.2, 200.0], [30.3, 200.0], [30.4, 200.0], [30.5, 200.0], [30.6, 201.0], [30.7, 201.0], [30.8, 201.0], [30.9, 201.0], [31.0, 201.0], [31.1, 201.0], [31.2, 201.0], [31.3, 201.0], [31.4, 201.0], [31.5, 201.0], [31.6, 201.0], [31.7, 201.0], [31.8, 201.0], [31.9, 201.0], [32.0, 201.0], [32.1, 201.0], [32.2, 201.0], [32.3, 202.0], [32.4, 202.0], [32.5, 202.0], [32.6, 202.0], [32.7, 202.0], [32.8, 202.0], [32.9, 202.0], [33.0, 202.0], [33.1, 202.0], [33.2, 202.0], [33.3, 202.0], [33.4, 202.0], [33.5, 202.0], [33.6, 202.0], [33.7, 202.0], [33.8, 202.0], [33.9, 202.0], [34.0, 202.0], [34.1, 202.0], [34.2, 202.0], [34.3, 202.0], [34.4, 202.0], [34.5, 202.0], [34.6, 202.0], [34.7, 202.0], [34.8, 203.0], [34.9, 203.0], [35.0, 203.0], [35.1, 203.0], [35.2, 203.0], [35.3, 203.0], [35.4, 203.0], [35.5, 203.0], [35.6, 203.0], [35.7, 203.0], [35.8, 203.0], [35.9, 203.0], [36.0, 203.0], [36.1, 203.0], [36.2, 203.0], [36.3, 203.0], [36.4, 203.0], [36.5, 203.0], [36.6, 203.0], [36.7, 203.0], [36.8, 203.0], [36.9, 203.0], [37.0, 203.0], [37.1, 203.0], [37.2, 203.0], [37.3, 203.0], [37.4, 203.0], [37.5, 203.0], [37.6, 203.0], [37.7, 203.0], [37.8, 203.0], [37.9, 203.0], [38.0, 203.0], [38.1, 203.0], [38.2, 203.0], [38.3, 203.0], [38.4, 203.0], [38.5, 203.0], [38.6, 203.0], [38.7, 203.0], [38.8, 203.0], [38.9, 203.0], [39.0, 203.0], [39.1, 203.0], [39.2, 203.0], [39.3, 203.0], [39.4, 203.0], [39.5, 203.0], [39.6, 203.0], [39.7, 204.0], [39.8, 204.0], [39.9, 204.0], [40.0, 204.0], [40.1, 204.0], [40.2, 204.0], [40.3, 204.0], [40.4, 204.0], [40.5, 204.0], [40.6, 204.0], [40.7, 204.0], [40.8, 204.0], [40.9, 204.0], [41.0, 204.0], [41.1, 204.0], [41.2, 204.0], [41.3, 204.0], [41.4, 204.0], [41.5, 204.0], [41.6, 204.0], [41.7, 204.0], [41.8, 204.0], [41.9, 204.0], [42.0, 204.0], [42.1, 204.0], [42.2, 204.0], [42.3, 204.0], [42.4, 204.0], [42.5, 204.0], [42.6, 204.0], [42.7, 204.0], [42.8, 204.0], [42.9, 204.0], [43.0, 204.0], [43.1, 204.0], [43.2, 204.0], [43.3, 204.0], [43.4, 204.0], [43.5, 204.0], [43.6, 204.0], [43.7, 204.0], [43.8, 204.0], [43.9, 204.0], [44.0, 204.0], [44.1, 204.0], [44.2, 204.0], [44.3, 204.0], [44.4, 204.0], [44.5, 204.0], [44.6, 204.0], [44.7, 204.0], [44.8, 204.0], [44.9, 204.0], [45.0, 204.0], [45.1, 204.0], [45.2, 204.0], [45.3, 204.0], [45.4, 204.0], [45.5, 204.0], [45.6, 204.0], [45.7, 204.0], [45.8, 204.0], [45.9, 204.0], [46.0, 204.0], [46.1, 204.0], [46.2, 204.0], [46.3, 204.0], [46.4, 204.0], [46.5, 204.0], [46.6, 204.0], [46.7, 204.0], [46.8, 204.0], [46.9, 204.0], [47.0, 204.0], [47.1, 204.0], [47.2, 204.0], [47.3, 204.0], [47.4, 204.0], [47.5, 204.0], [47.6, 204.0], [47.7, 204.0], [47.8, 204.0], [47.9, 204.0], [48.0, 204.0], [48.1, 204.0], [48.2, 204.0], [48.3, 204.0], [48.4, 204.0], [48.5, 204.0], [48.6, 204.0], [48.7, 204.0], [48.8, 205.0], [48.9, 205.0], [49.0, 205.0], [49.1, 205.0], [49.2, 205.0], [49.3, 205.0], [49.4, 205.0], [49.5, 205.0], [49.6, 205.0], [49.7, 205.0], [49.8, 205.0], [49.9, 205.0], [50.0, 205.0], [50.1, 205.0], [50.2, 205.0], [50.3, 205.0], [50.4, 205.0], [50.5, 205.0], [50.6, 205.0], [50.7, 205.0], [50.8, 205.0], [50.9, 205.0], [51.0, 205.0], [51.1, 205.0], [51.2, 205.0], [51.3, 205.0], [51.4, 205.0], [51.5, 205.0], [51.6, 205.0], [51.7, 205.0], [51.8, 205.0], [51.9, 205.0], [52.0, 205.0], [52.1, 205.0], [52.2, 205.0], [52.3, 205.0], [52.4, 205.0], [52.5, 205.0], [52.6, 205.0], [52.7, 205.0], [52.8, 205.0], [52.9, 205.0], [53.0, 205.0], [53.1, 205.0], [53.2, 205.0], [53.3, 205.0], [53.4, 205.0], [53.5, 205.0], [53.6, 205.0], [53.7, 205.0], [53.8, 205.0], [53.9, 205.0], [54.0, 205.0], [54.1, 205.0], [54.2, 205.0], [54.3, 205.0], [54.4, 205.0], [54.5, 205.0], [54.6, 205.0], [54.7, 205.0], [54.8, 205.0], [54.9, 205.0], [55.0, 205.0], [55.1, 205.0], [55.2, 205.0], [55.3, 205.0], [55.4, 205.0], [55.5, 205.0], [55.6, 205.0], [55.7, 205.0], [55.8, 205.0], [55.9, 205.0], [56.0, 205.0], [56.1, 205.0], [56.2, 205.0], [56.3, 205.0], [56.4, 205.0], [56.5, 205.0], [56.6, 205.0], [56.7, 205.0], [56.8, 205.0], [56.9, 205.0], [57.0, 205.0], [57.1, 205.0], [57.2, 205.0], [57.3, 205.0], [57.4, 205.0], [57.5, 205.0], [57.6, 205.0], [57.7, 205.0], [57.8, 205.0], [57.9, 205.0], [58.0, 205.0], [58.1, 205.0], [58.2, 205.0], [58.3, 205.0], [58.4, 205.0], [58.5, 205.0], [58.6, 205.0], [58.7, 205.0], [58.8, 205.0], [58.9, 205.0], [59.0, 205.0], [59.1, 205.0], [59.2, 205.0], [59.3, 205.0], [59.4, 205.0], [59.5, 205.0], [59.6, 205.0], [59.7, 205.0], [59.8, 205.0], [59.9, 205.0], [60.0, 205.0], [60.1, 205.0], [60.2, 205.0], [60.3, 205.0], [60.4, 205.0], [60.5, 205.0], [60.6, 205.0], [60.7, 205.0], [60.8, 205.0], [60.9, 205.0], [61.0, 205.0], [61.1, 205.0], [61.2, 205.0], [61.3, 205.0], [61.4, 205.0], [61.5, 205.0], [61.6, 205.0], [61.7, 205.0], [61.8, 206.0], [61.9, 206.0], [62.0, 206.0], [62.1, 206.0], [62.2, 206.0], [62.3, 206.0], [62.4, 206.0], [62.5, 206.0], [62.6, 206.0], [62.7, 206.0], [62.8, 206.0], [62.9, 206.0], [63.0, 206.0], [63.1, 206.0], [63.2, 206.0], [63.3, 206.0], [63.4, 206.0], [63.5, 206.0], [63.6, 206.0], [63.7, 206.0], [63.8, 206.0], [63.9, 206.0], [64.0, 206.0], [64.1, 206.0], [64.2, 206.0], [64.3, 206.0], [64.4, 206.0], [64.5, 206.0], [64.6, 206.0], [64.7, 206.0], [64.8, 206.0], [64.9, 206.0], [65.0, 206.0], [65.1, 206.0], [65.2, 206.0], [65.3, 206.0], [65.4, 206.0], [65.5, 206.0], [65.6, 206.0], [65.7, 206.0], [65.8, 206.0], [65.9, 206.0], [66.0, 206.0], [66.1, 206.0], [66.2, 206.0], [66.3, 206.0], [66.4, 206.0], [66.5, 206.0], [66.6, 206.0], [66.7, 206.0], [66.8, 206.0], [66.9, 206.0], [67.0, 206.0], [67.1, 206.0], [67.2, 206.0], [67.3, 206.0], [67.4, 206.0], [67.5, 206.0], [67.6, 206.0], [67.7, 206.0], [67.8, 206.0], [67.9, 206.0], [68.0, 207.0], [68.1, 207.0], [68.2, 207.0], [68.3, 207.0], [68.4, 207.0], [68.5, 207.0], [68.6, 207.0], [68.7, 207.0], [68.8, 207.0], [68.9, 207.0], [69.0, 207.0], [69.1, 207.0], [69.2, 207.0], [69.3, 207.0], [69.4, 207.0], [69.5, 207.0], [69.6, 207.0], [69.7, 207.0], [69.8, 207.0], [69.9, 207.0], [70.0, 207.0], [70.1, 207.0], [70.2, 207.0], [70.3, 207.0], [70.4, 207.0], [70.5, 207.0], [70.6, 207.0], [70.7, 207.0], [70.8, 207.0], [70.9, 207.0], [71.0, 207.0], [71.1, 207.0], [71.2, 207.0], [71.3, 207.0], [71.4, 207.0], [71.5, 207.0], [71.6, 207.0], [71.7, 207.0], [71.8, 207.0], [71.9, 207.0], [72.0, 207.0], [72.1, 207.0], [72.2, 208.0], [72.3, 208.0], [72.4, 208.0], [72.5, 208.0], [72.6, 208.0], [72.7, 208.0], [72.8, 208.0], [72.9, 208.0], [73.0, 208.0], [73.1, 208.0], [73.2, 208.0], [73.3, 208.0], [73.4, 208.0], [73.5, 208.0], [73.6, 208.0], [73.7, 208.0], [73.8, 208.0], [73.9, 208.0], [74.0, 208.0], [74.1, 208.0], [74.2, 208.0], [74.3, 208.0], [74.4, 208.0], [74.5, 208.0], [74.6, 208.0], [74.7, 208.0], [74.8, 209.0], [74.9, 209.0], [75.0, 209.0], [75.1, 209.0], [75.2, 209.0], [75.3, 209.0], [75.4, 209.0], [75.5, 209.0], [75.6, 209.0], [75.7, 209.0], [75.8, 209.0], [75.9, 209.0], [76.0, 210.0], [76.1, 210.0], [76.2, 210.0], [76.3, 210.0], [76.4, 210.0], [76.5, 210.0], [76.6, 210.0], [76.7, 211.0], [76.8, 211.0], [76.9, 211.0], [77.0, 211.0], [77.1, 211.0], [77.2, 211.0], [77.3, 211.0], [77.4, 212.0], [77.5, 212.0], [77.6, 212.0], [77.7, 212.0], [77.8, 213.0], [77.9, 213.0], [78.0, 213.0], [78.1, 214.0], [78.2, 214.0], [78.3, 214.0], [78.4, 215.0], [78.5, 216.0], [78.6, 216.0], [78.7, 217.0], [78.8, 217.0], [78.9, 218.0], [79.0, 218.0], [79.1, 218.0], [79.2, 218.0], [79.3, 219.0], [79.4, 219.0], [79.5, 219.0], [79.6, 219.0], [79.7, 220.0], [79.8, 220.0], [79.9, 220.0], [80.0, 220.0], [80.1, 221.0], [80.2, 222.0], [80.3, 223.0], [80.4, 224.0], [80.5, 224.0], [80.6, 224.0], [80.7, 225.0], [80.8, 225.0], [80.9, 225.0], [81.0, 226.0], [81.1, 227.0], [81.2, 228.0], [81.3, 230.0], [81.4, 230.0], [81.5, 231.0], [81.6, 231.0], [81.7, 233.0], [81.8, 234.0], [81.9, 234.0], [82.0, 235.0], [82.1, 236.0], [82.2, 236.0], [82.3, 237.0], [82.4, 237.0], [82.5, 238.0], [82.6, 240.0], [82.7, 240.0], [82.8, 241.0], [82.9, 243.0], [83.0, 243.0], [83.1, 244.0], [83.2, 244.0], [83.3, 246.0], [83.4, 246.0], [83.5, 246.0], [83.6, 249.0], [83.7, 253.0], [83.8, 253.0], [83.9, 253.0], [84.0, 255.0], [84.1, 255.0], [84.2, 256.0], [84.3, 261.0], [84.4, 262.0], [84.5, 264.0], [84.6, 266.0], [84.7, 267.0], [84.8, 270.0], [84.9, 275.0], [85.0, 276.0], [85.1, 279.0], [85.2, 288.0], [85.3, 288.0], [85.4, 290.0], [85.5, 291.0], [85.6, 292.0], [85.7, 293.0], [85.8, 295.0], [85.9, 297.0], [86.0, 297.0], [86.1, 298.0], [86.2, 299.0], [86.3, 299.0], [86.4, 299.0], [86.5, 300.0], [86.6, 301.0], [86.7, 301.0], [86.8, 302.0], [86.9, 302.0], [87.0, 302.0], [87.1, 303.0], [87.2, 303.0], [87.3, 303.0], [87.4, 303.0], [87.5, 304.0], [87.6, 304.0], [87.7, 304.0], [87.8, 305.0], [87.9, 305.0], [88.0, 305.0], [88.1, 305.0], [88.2, 305.0], [88.3, 305.0], [88.4, 305.0], [88.5, 305.0], [88.6, 305.0], [88.7, 305.0], [88.8, 305.0], [88.9, 305.0], [89.0, 305.0], [89.1, 306.0], [89.2, 306.0], [89.3, 306.0], [89.4, 306.0], [89.5, 306.0], [89.6, 306.0], [89.7, 306.0], [89.8, 306.0], [89.9, 306.0], [90.0, 306.0], [90.1, 306.0], [90.2, 306.0], [90.3, 306.0], [90.4, 306.0], [90.5, 306.0], [90.6, 306.0], [90.7, 307.0], [90.8, 307.0], [90.9, 307.0], [91.0, 307.0], [91.1, 307.0], [91.2, 307.0], [91.3, 307.0], [91.4, 307.0], [91.5, 307.0], [91.6, 307.0], [91.7, 307.0], [91.8, 307.0], [91.9, 307.0], [92.0, 307.0], [92.1, 307.0], [92.2, 307.0], [92.3, 307.0], [92.4, 307.0], [92.5, 307.0], [92.6, 307.0], [92.7, 307.0], [92.8, 307.0], [92.9, 307.0], [93.0, 307.0], [93.1, 308.0], [93.2, 308.0], [93.3, 308.0], [93.4, 308.0], [93.5, 308.0], [93.6, 308.0], [93.7, 308.0], [93.8, 308.0], [93.9, 308.0], [94.0, 308.0], [94.1, 308.0], [94.2, 308.0], [94.3, 309.0], [94.4, 309.0], [94.5, 309.0], [94.6, 309.0], [94.7, 310.0], [94.8, 310.0], [94.9, 310.0], [95.0, 311.0], [95.1, 311.0], [95.2, 312.0], [95.3, 312.0], [95.4, 312.0], [95.5, 314.0], [95.6, 316.0], [95.7, 317.0], [95.8, 317.0], [95.9, 318.0], [96.0, 320.0], [96.1, 328.0], [96.2, 332.0], [96.3, 333.0], [96.4, 352.0], [96.5, 359.0], [96.6, 371.0], [96.7, 380.0], [96.8, 406.0], [96.9, 406.0], [97.0, 410.0], [97.1, 410.0], [97.2, 410.0], [97.3, 410.0], [97.4, 413.0], [97.5, 417.0], [97.6, 461.0], [97.7, 511.0], [97.8, 511.0], [97.9, 512.0], [98.0, 613.0], [98.1, 613.0], [98.2, 658.0], [98.3, 672.0], [98.4, 689.0], [98.5, 716.0], [98.6, 718.0], [98.7, 728.0], [98.8, 807.0], [98.9, 815.0], [99.0, 822.0], [99.1, 851.0], [99.2, 922.0], [99.3, 928.0], [99.4, 1026.0], [99.5, 1027.0], [99.6, 1332.0], [99.7, 1536.0], [99.8, 1890.0], [99.9, 4139.0]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[0.0, 327.0], [0.1, 328.0], [0.2, 336.0], [0.3, 336.0], [0.4, 344.0], [0.5, 344.0], [0.6, 350.0], [0.7, 350.0], [0.8, 352.0], [0.9, 353.0], [1.0, 356.0], [1.1, 360.0], [1.2, 362.0], [1.3, 362.0], [1.4, 362.0], [1.5, 363.0], [1.6, 365.0], [1.7, 366.0], [1.8, 366.0], [1.9, 367.0], [2.0, 367.0], [2.1, 367.0], [2.2, 368.0], [2.3, 368.0], [2.4, 368.0], [2.5, 369.0], [2.6, 369.0], [2.7, 369.0], [2.8, 370.0], [2.9, 370.0], [3.0, 371.0], [3.1, 371.0], [3.2, 372.0], [3.3, 373.0], [3.4, 374.0], [3.5, 374.0], [3.6, 375.0], [3.7, 375.0], [3.8, 376.0], [3.9, 376.0], [4.0, 376.0], [4.1, 377.0], [4.2, 377.0], [4.3, 378.0], [4.4, 378.0], [4.5, 378.0], [4.6, 379.0], [4.7, 380.0], [4.8, 380.0], [4.9, 380.0], [5.0, 381.0], [5.1, 381.0], [5.2, 382.0], [5.3, 382.0], [5.4, 382.0], [5.5, 384.0], [5.6, 384.0], [5.7, 385.0], [5.8, 385.0], [5.9, 385.0], [6.0, 385.0], [6.1, 386.0], [6.2, 386.0], [6.3, 386.0], [6.4, 387.0], [6.5, 387.0], [6.6, 387.0], [6.7, 388.0], [6.8, 388.0], [6.9, 388.0], [7.0, 389.0], [7.1, 389.0], [7.2, 389.0], [7.3, 389.0], [7.4, 389.0], [7.5, 390.0], [7.6, 390.0], [7.7, 390.0], [7.8, 391.0], [7.9, 391.0], [8.0, 391.0], [8.1, 391.0], [8.2, 391.0], [8.3, 391.0], [8.4, 391.0], [8.5, 391.0], [8.6, 392.0], [8.7, 392.0], [8.8, 392.0], [8.9, 392.0], [9.0, 393.0], [9.1, 393.0], [9.2, 393.0], [9.3, 393.0], [9.4, 393.0], [9.5, 393.0], [9.6, 393.0], [9.7, 393.0], [9.8, 394.0], [9.9, 394.0], [10.0, 394.0], [10.1, 394.0], [10.2, 394.0], [10.3, 395.0], [10.4, 395.0], [10.5, 395.0], [10.6, 395.0], [10.7, 395.0], [10.8, 395.0], [10.9, 395.0], [11.0, 395.0], [11.1, 396.0], [11.2, 396.0], [11.3, 396.0], [11.4, 396.0], [11.5, 396.0], [11.6, 396.0], [11.7, 396.0], [11.8, 397.0], [11.9, 397.0], [12.0, 397.0], [12.1, 398.0], [12.2, 398.0], [12.3, 398.0], [12.4, 398.0], [12.5, 399.0], [12.6, 399.0], [12.7, 399.0], [12.8, 399.0], [12.9, 399.0], [13.0, 399.0], [13.1, 399.0], [13.2, 399.0], [13.3, 400.0], [13.4, 400.0], [13.5, 400.0], [13.6, 400.0], [13.7, 401.0], [13.8, 401.0], [13.9, 401.0], [14.0, 401.0], [14.1, 401.0], [14.2, 401.0], [14.3, 401.0], [14.4, 401.0], [14.5, 401.0], [14.6, 402.0], [14.7, 402.0], [14.8, 402.0], [14.9, 402.0], [15.0, 402.0], [15.1, 402.0], [15.2, 402.0], [15.3, 402.0], [15.4, 403.0], [15.5, 403.0], [15.6, 403.0], [15.7, 403.0], [15.8, 403.0], [15.9, 403.0], [16.0, 404.0], [16.1, 404.0], [16.2, 404.0], [16.3, 404.0], [16.4, 404.0], [16.5, 404.0], [16.6, 404.0], [16.7, 404.0], [16.8, 404.0], [16.9, 404.0], [17.0, 404.0], [17.1, 404.0], [17.2, 404.0], [17.3, 404.0], [17.4, 405.0], [17.5, 405.0], [17.6, 405.0], [17.7, 405.0], [17.8, 405.0], [17.9, 405.0], [18.0, 405.0], [18.1, 405.0], [18.2, 405.0], [18.3, 406.0], [18.4, 406.0], [18.5, 406.0], [18.6, 406.0], [18.7, 406.0], [18.8, 406.0], [18.9, 406.0], [19.0, 406.0], [19.1, 406.0], [19.2, 406.0], [19.3, 406.0], [19.4, 406.0], [19.5, 406.0], [19.6, 406.0], [19.7, 406.0], [19.8, 406.0], [19.9, 406.0], [20.0, 406.0], [20.1, 407.0], [20.2, 407.0], [20.3, 407.0], [20.4, 407.0], [20.5, 407.0], [20.6, 407.0], [20.7, 407.0], [20.8, 407.0], [20.9, 407.0], [21.0, 407.0], [21.1, 407.0], [21.2, 407.0], [21.3, 407.0], [21.4, 407.0], [21.5, 407.0], [21.6, 407.0], [21.7, 407.0], [21.8, 407.0], [21.9, 407.0], [22.0, 407.0], [22.1, 407.0], [22.2, 407.0], [22.3, 407.0], [22.4, 407.0], [22.5, 407.0], [22.6, 407.0], [22.7, 407.0], [22.8, 407.0], [22.9, 407.0], [23.0, 407.0], [23.1, 407.0], [23.2, 407.0], [23.3, 407.0], [23.4, 407.0], [23.5, 408.0], [23.6, 408.0], [23.7, 408.0], [23.8, 408.0], [23.9, 408.0], [24.0, 408.0], [24.1, 408.0], [24.2, 408.0], [24.3, 408.0], [24.4, 408.0], [24.5, 408.0], [24.6, 408.0], [24.7, 408.0], [24.8, 408.0], [24.9, 408.0], [25.0, 408.0], [25.1, 408.0], [25.2, 408.0], [25.3, 408.0], [25.4, 408.0], [25.5, 408.0], [25.6, 408.0], [25.7, 408.0], [25.8, 408.0], [25.9, 408.0], [26.0, 408.0], [26.1, 408.0], [26.2, 408.0], [26.3, 408.0], [26.4, 408.0], [26.5, 408.0], [26.6, 408.0], [26.7, 408.0], [26.8, 408.0], [26.9, 408.0], [27.0, 408.0], [27.1, 408.0], [27.2, 408.0], [27.3, 408.0], [27.4, 408.0], [27.5, 408.0], [27.6, 408.0], [27.7, 408.0], [27.8, 408.0], [27.9, 408.0], [28.0, 408.0], [28.1, 408.0], [28.2, 408.0], [28.3, 408.0], [28.4, 408.0], [28.5, 408.0], [28.6, 408.0], [28.7, 408.0], [28.8, 408.0], [28.9, 408.0], [29.0, 408.0], [29.1, 408.0], [29.2, 408.0], [29.3, 408.0], [29.4, 408.0], [29.5, 408.0], [29.6, 408.0], [29.7, 408.0], [29.8, 409.0], [29.9, 409.0], [30.0, 409.0], [30.1, 409.0], [30.2, 409.0], [30.3, 409.0], [30.4, 409.0], [30.5, 409.0], [30.6, 409.0], [30.7, 409.0], [30.8, 409.0], [30.9, 409.0], [31.0, 409.0], [31.1, 409.0], [31.2, 409.0], [31.3, 409.0], [31.4, 409.0], [31.5, 409.0], [31.6, 409.0], [31.7, 409.0], [31.8, 409.0], [31.9, 409.0], [32.0, 409.0], [32.1, 409.0], [32.2, 409.0], [32.3, 409.0], [32.4, 409.0], [32.5, 409.0], [32.6, 409.0], [32.7, 409.0], [32.8, 409.0], [32.9, 409.0], [33.0, 409.0], [33.1, 409.0], [33.2, 409.0], [33.3, 409.0], [33.4, 409.0], [33.5, 409.0], [33.6, 409.0], [33.7, 409.0], [33.8, 409.0], [33.9, 409.0], [34.0, 409.0], [34.1, 409.0], [34.2, 409.0], [34.3, 409.0], [34.4, 409.0], [34.5, 409.0], [34.6, 409.0], [34.7, 409.0], [34.8, 409.0], [34.9, 409.0], [35.0, 409.0], [35.1, 409.0], [35.2, 409.0], [35.3, 409.0], [35.4, 409.0], [35.5, 409.0], [35.6, 409.0], [35.7, 409.0], [35.8, 409.0], [35.9, 409.0], [36.0, 409.0], [36.1, 409.0], [36.2, 409.0], [36.3, 409.0], [36.4, 409.0], [36.5, 409.0], [36.6, 409.0], [36.7, 409.0], [36.8, 409.0], [36.9, 409.0], [37.0, 409.0], [37.1, 409.0], [37.2, 409.0], [37.3, 409.0], [37.4, 409.0], [37.5, 409.0], [37.6, 409.0], [37.7, 409.0], [37.8, 409.0], [37.9, 409.0], [38.0, 409.0], [38.1, 409.0], [38.2, 409.0], [38.3, 409.0], [38.4, 409.0], [38.5, 409.0], [38.6, 409.0], [38.7, 409.0], [38.8, 409.0], [38.9, 409.0], [39.0, 409.0], [39.1, 409.0], [39.2, 410.0], [39.3, 410.0], [39.4, 410.0], [39.5, 410.0], [39.6, 410.0], [39.7, 410.0], [39.8, 410.0], [39.9, 410.0], [40.0, 410.0], [40.1, 410.0], [40.2, 410.0], [40.3, 410.0], [40.4, 410.0], [40.5, 410.0], [40.6, 410.0], [40.7, 410.0], [40.8, 410.0], [40.9, 410.0], [41.0, 410.0], [41.1, 410.0], [41.2, 410.0], [41.3, 410.0], [41.4, 410.0], [41.5, 410.0], [41.6, 410.0], [41.7, 410.0], [41.8, 410.0], [41.9, 410.0], [42.0, 410.0], [42.1, 410.0], [42.2, 410.0], [42.3, 410.0], [42.4, 410.0], [42.5, 410.0], [42.6, 410.0], [42.7, 410.0], [42.8, 410.0], [42.9, 410.0], [43.0, 410.0], [43.1, 410.0], [43.2, 410.0], [43.3, 410.0], [43.4, 410.0], [43.5, 410.0], [43.6, 410.0], [43.7, 410.0], [43.8, 410.0], [43.9, 410.0], [44.0, 410.0], [44.1, 410.0], [44.2, 410.0], [44.3, 410.0], [44.4, 410.0], [44.5, 410.0], [44.6, 410.0], [44.7, 411.0], [44.8, 411.0], [44.9, 411.0], [45.0, 411.0], [45.1, 411.0], [45.2, 411.0], [45.3, 411.0], [45.4, 411.0], [45.5, 411.0], [45.6, 411.0], [45.7, 411.0], [45.8, 411.0], [45.9, 411.0], [46.0, 411.0], [46.1, 411.0], [46.2, 411.0], [46.3, 411.0], [46.4, 411.0], [46.5, 411.0], [46.6, 411.0], [46.7, 411.0], [46.8, 411.0], [46.9, 411.0], [47.0, 412.0], [47.1, 412.0], [47.2, 412.0], [47.3, 412.0], [47.4, 412.0], [47.5, 412.0], [47.6, 412.0], [47.7, 412.0], [47.8, 412.0], [47.9, 412.0], [48.0, 412.0], [48.1, 412.0], [48.2, 412.0], [48.3, 412.0], [48.4, 412.0], [48.5, 412.0], [48.6, 412.0], [48.7, 412.0], [48.8, 412.0], [48.9, 412.0], [49.0, 412.0], [49.1, 413.0], [49.2, 413.0], [49.3, 413.0], [49.4, 413.0], [49.5, 413.0], [49.6, 413.0], [49.7, 413.0], [49.8, 413.0], [49.9, 413.0], [50.0, 413.0], [50.1, 413.0], [50.2, 413.0], [50.3, 413.0], [50.4, 413.0], [50.5, 414.0], [50.6, 414.0], [50.7, 414.0], [50.8, 414.0], [50.9, 414.0], [51.0, 414.0], [51.1, 414.0], [51.2, 414.0], [51.3, 415.0], [51.4, 415.0], [51.5, 415.0], [51.6, 415.0], [51.7, 415.0], [51.8, 415.0], [51.9, 415.0], [52.0, 415.0], [52.1, 415.0], [52.2, 415.0], [52.3, 416.0], [52.4, 416.0], [52.5, 416.0], [52.6, 416.0], [52.7, 416.0], [52.8, 416.0], [52.9, 416.0], [53.0, 416.0], [53.1, 416.0], [53.2, 417.0], [53.3, 417.0], [53.4, 417.0], [53.5, 417.0], [53.6, 417.0], [53.7, 417.0], [53.8, 418.0], [53.9, 418.0], [54.0, 418.0], [54.1, 418.0], [54.2, 418.0], [54.3, 418.0], [54.4, 419.0], [54.5, 419.0], [54.6, 419.0], [54.7, 419.0], [54.8, 419.0], [54.9, 419.0], [55.0, 420.0], [55.1, 420.0], [55.2, 420.0], [55.3, 420.0], [55.4, 420.0], [55.5, 421.0], [55.6, 421.0], [55.7, 421.0], [55.8, 421.0], [55.9, 421.0], [56.0, 421.0], [56.1, 421.0], [56.2, 422.0], [56.3, 422.0], [56.4, 423.0], [56.5, 423.0], [56.6, 423.0], [56.7, 423.0], [56.8, 423.0], [56.9, 423.0], [57.0, 424.0], [57.1, 424.0], [57.2, 424.0], [57.3, 425.0], [57.4, 425.0], [57.5, 425.0], [57.6, 425.0], [57.7, 425.0], [57.8, 426.0], [57.9, 426.0], [58.0, 426.0], [58.1, 427.0], [58.2, 427.0], [58.3, 427.0], [58.4, 427.0], [58.5, 428.0], [58.6, 428.0], [58.7, 428.0], [58.8, 428.0], [58.9, 429.0], [59.0, 429.0], [59.1, 429.0], [59.2, 430.0], [59.3, 430.0], [59.4, 430.0], [59.5, 430.0], [59.6, 430.0], [59.7, 431.0], [59.8, 431.0], [59.9, 432.0], [60.0, 432.0], [60.1, 432.0], [60.2, 434.0], [60.3, 434.0], [60.4, 435.0], [60.5, 435.0], [60.6, 436.0], [60.7, 437.0], [60.8, 437.0], [60.9, 437.0], [61.0, 437.0], [61.1, 438.0], [61.2, 438.0], [61.3, 439.0], [61.4, 439.0], [61.5, 440.0], [61.6, 440.0], [61.7, 440.0], [61.8, 440.0], [61.9, 441.0], [62.0, 442.0], [62.1, 442.0], [62.2, 443.0], [62.3, 444.0], [62.4, 444.0], [62.5, 444.0], [62.6, 444.0], [62.7, 445.0], [62.8, 445.0], [62.9, 446.0], [63.0, 447.0], [63.1, 447.0], [63.2, 448.0], [63.3, 448.0], [63.4, 448.0], [63.5, 449.0], [63.6, 450.0], [63.7, 450.0], [63.8, 451.0], [63.9, 452.0], [64.0, 452.0], [64.1, 452.0], [64.2, 453.0], [64.3, 454.0], [64.4, 454.0], [64.5, 455.0], [64.6, 455.0], [64.7, 456.0], [64.8, 456.0], [64.9, 458.0], [65.0, 458.0], [65.1, 459.0], [65.2, 460.0], [65.3, 461.0], [65.4, 461.0], [65.5, 461.0], [65.6, 461.0], [65.7, 461.0], [65.8, 462.0], [65.9, 463.0], [66.0, 464.0], [66.1, 465.0], [66.2, 465.0], [66.3, 466.0], [66.4, 467.0], [66.5, 468.0], [66.6, 468.0], [66.7, 469.0], [66.8, 470.0], [66.9, 470.0], [67.0, 472.0], [67.1, 473.0], [67.2, 473.0], [67.3, 474.0], [67.4, 475.0], [67.5, 476.0], [67.6, 476.0], [67.7, 476.0], [67.8, 476.0], [67.9, 477.0], [68.0, 477.0], [68.1, 477.0], [68.2, 477.0], [68.3, 478.0], [68.4, 478.0], [68.5, 478.0], [68.6, 478.0], [68.7, 479.0], [68.8, 479.0], [68.9, 480.0], [69.0, 480.0], [69.1, 482.0], [69.2, 482.0], [69.3, 482.0], [69.4, 482.0], [69.5, 483.0], [69.6, 483.0], [69.7, 483.0], [69.8, 484.0], [69.9, 484.0], [70.0, 484.0], [70.1, 484.0], [70.2, 484.0], [70.3, 485.0], [70.4, 485.0], [70.5, 485.0], [70.6, 486.0], [70.7, 486.0], [70.8, 486.0], [70.9, 487.0], [71.0, 487.0], [71.1, 488.0], [71.2, 488.0], [71.3, 489.0], [71.4, 490.0], [71.5, 491.0], [71.6, 491.0], [71.7, 491.0], [71.8, 491.0], [71.9, 492.0], [72.0, 492.0], [72.1, 492.0], [72.2, 492.0], [72.3, 494.0], [72.4, 494.0], [72.5, 495.0], [72.6, 495.0], [72.7, 495.0], [72.8, 495.0], [72.9, 496.0], [73.0, 496.0], [73.1, 496.0], [73.2, 497.0], [73.3, 497.0], [73.4, 497.0], [73.5, 498.0], [73.6, 498.0], [73.7, 499.0], [73.8, 499.0], [73.9, 500.0], [74.0, 500.0], [74.1, 500.0], [74.2, 500.0], [74.3, 501.0], [74.4, 501.0], [74.5, 502.0], [74.6, 502.0], [74.7, 503.0], [74.8, 503.0], [74.9, 504.0], [75.0, 504.0], [75.1, 505.0], [75.2, 505.0], [75.3, 505.0], [75.4, 506.0], [75.5, 506.0], [75.6, 506.0], [75.7, 506.0], [75.8, 506.0], [75.9, 507.0], [76.0, 507.0], [76.1, 507.0], [76.2, 507.0], [76.3, 507.0], [76.4, 508.0], [76.5, 508.0], [76.6, 508.0], [76.7, 508.0], [76.8, 508.0], [76.9, 508.0], [77.0, 509.0], [77.1, 509.0], [77.2, 509.0], [77.3, 509.0], [77.4, 509.0], [77.5, 509.0], [77.6, 509.0], [77.7, 509.0], [77.8, 509.0], [77.9, 509.0], [78.0, 509.0], [78.1, 509.0], [78.2, 509.0], [78.3, 510.0], [78.4, 510.0], [78.5, 510.0], [78.6, 510.0], [78.7, 510.0], [78.8, 510.0], [78.9, 510.0], [79.0, 510.0], [79.1, 510.0], [79.2, 510.0], [79.3, 510.0], [79.4, 510.0], [79.5, 510.0], [79.6, 510.0], [79.7, 510.0], [79.8, 510.0], [79.9, 510.0], [80.0, 510.0], [80.1, 510.0], [80.2, 510.0], [80.3, 510.0], [80.4, 510.0], [80.5, 510.0], [80.6, 510.0], [80.7, 510.0], [80.8, 510.0], [80.9, 510.0], [81.0, 510.0], [81.1, 511.0], [81.2, 511.0], [81.3, 511.0], [81.4, 511.0], [81.5, 511.0], [81.6, 511.0], [81.7, 511.0], [81.8, 511.0], [81.9, 511.0], [82.0, 511.0], [82.1, 511.0], [82.2, 511.0], [82.3, 511.0], [82.4, 511.0], [82.5, 511.0], [82.6, 511.0], [82.7, 511.0], [82.8, 511.0], [82.9, 511.0], [83.0, 511.0], [83.1, 511.0], [83.2, 511.0], [83.3, 511.0], [83.4, 511.0], [83.5, 511.0], [83.6, 511.0], [83.7, 511.0], [83.8, 511.0], [83.9, 511.0], [84.0, 511.0], [84.1, 511.0], [84.2, 511.0], [84.3, 511.0], [84.4, 511.0], [84.5, 511.0], [84.6, 511.0], [84.7, 511.0], [84.8, 511.0], [84.9, 511.0], [85.0, 511.0], [85.1, 511.0], [85.2, 511.0], [85.3, 512.0], [85.4, 512.0], [85.5, 512.0], [85.6, 512.0], [85.7, 512.0], [85.8, 512.0], [85.9, 512.0], [86.0, 512.0], [86.1, 512.0], [86.2, 512.0], [86.3, 512.0], [86.4, 512.0], [86.5, 512.0], [86.6, 512.0], [86.7, 512.0], [86.8, 512.0], [86.9, 512.0], [87.0, 512.0], [87.1, 512.0], [87.2, 512.0], [87.3, 512.0], [87.4, 512.0], [87.5, 512.0], [87.6, 512.0], [87.7, 512.0], [87.8, 512.0], [87.9, 512.0], [88.0, 512.0], [88.1, 512.0], [88.2, 512.0], [88.3, 512.0], [88.4, 512.0], [88.5, 513.0], [88.6, 513.0], [88.7, 513.0], [88.8, 513.0], [88.9, 513.0], [89.0, 513.0], [89.1, 513.0], [89.2, 513.0], [89.3, 513.0], [89.4, 513.0], [89.5, 513.0], [89.6, 513.0], [89.7, 513.0], [89.8, 513.0], [89.9, 513.0], [90.0, 513.0], [90.1, 514.0], [90.2, 514.0], [90.3, 514.0], [90.4, 514.0], [90.5, 514.0], [90.6, 514.0], [90.7, 514.0], [90.8, 514.0], [90.9, 514.0], [91.0, 514.0], [91.1, 515.0], [91.2, 515.0], [91.3, 515.0], [91.4, 515.0], [91.5, 515.0], [91.6, 516.0], [91.7, 516.0], [91.8, 516.0], [91.9, 519.0], [92.0, 521.0], [92.1, 522.0], [92.2, 526.0], [92.3, 528.0], [92.4, 529.0], [92.5, 529.0], [92.6, 533.0], [92.7, 535.0], [92.8, 540.0], [92.9, 546.0], [93.0, 547.0], [93.1, 553.0], [93.2, 553.0], [93.3, 554.0], [93.4, 555.0], [93.5, 561.0], [93.6, 566.0], [93.7, 572.0], [93.8, 577.0], [93.9, 580.0], [94.0, 582.0], [94.1, 585.0], [94.2, 588.0], [94.3, 594.0], [94.4, 594.0], [94.5, 601.0], [94.6, 605.0], [94.7, 607.0], [94.8, 609.0], [94.9, 612.0], [95.0, 613.0], [95.1, 613.0], [95.2, 613.0], [95.3, 613.0], [95.4, 614.0], [95.5, 614.0], [95.6, 614.0], [95.7, 614.0], [95.8, 614.0], [95.9, 614.0], [96.0, 614.0], [96.1, 614.0], [96.2, 615.0], [96.3, 616.0], [96.4, 617.0], [96.5, 617.0], [96.6, 617.0], [96.7, 629.0], [96.8, 632.0], [96.9, 635.0], [97.0, 638.0], [97.1, 641.0], [97.2, 665.0], [97.3, 668.0], [97.4, 681.0], [97.5, 682.0], [97.6, 690.0], [97.7, 713.0], [97.8, 729.0], [97.9, 751.0], [98.0, 762.0], [98.1, 792.0], [98.2, 820.0], [98.3, 861.0], [98.4, 929.0], [98.5, 1015.0], [98.6, 1044.0], [98.7, 1053.0], [98.8, 1143.0], [98.9, 1222.0], [99.0, 1485.0], [99.1, 1638.0], [99.2, 1740.0], [99.3, 1822.0], [99.4, 2085.0], [99.5, 2245.0], [99.6, 2560.0], [99.7, 4425.0], [99.8, 10535.0], [99.9, 10666.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 910.0, "series": [{"data": [[8200.0, 1.0], [600.0, 6.0], [700.0, 5.0], [200.0, 707.0], [800.0, 4.0], [900.0, 4.0], [1000.0, 3.0], [1100.0, 2.0], [300.0, 652.0], [1200.0, 2.0], [1300.0, 2.0], [1500.0, 2.0], [6000.0, 1.0], [400.0, 83.0], [1600.0, 2.0], [100.0, 2.0], [1700.0, 3.0], [1800.0, 1.0], [1900.0, 1.0], [7900.0, 1.0], [500.0, 16.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[2200.0, 1.0], [600.0, 687.0], [700.0, 218.0], [800.0, 83.0], [900.0, 36.0], [1000.0, 13.0], [1100.0, 7.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 7.0], [6100.0, 1.0], [1500.0, 1.0], [6300.0, 1.0], [1600.0, 2.0], [1700.0, 1.0], [500.0, 439.0], [8000.0, 1.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[600.0, 7.0], [700.0, 5.0], [200.0, 860.0], [800.0, 5.0], [900.0, 3.0], [1000.0, 3.0], [4100.0, 1.0], [1100.0, 1.0], [300.0, 156.0], [1300.0, 1.0], [1500.0, 1.0], [100.0, 436.0], [400.0, 13.0], [1700.0, 1.0], [7200.0, 1.0], [1800.0, 1.0], [500.0, 5.0]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[600.0, 48.0], [10200.0, 1.0], [10600.0, 1.0], [10500.0, 1.0], [10800.0, 1.0], [700.0, 7.0], [800.0, 4.0], [900.0, 1.0], [1000.0, 5.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [1600.0, 1.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2200.0, 1.0], [2300.0, 1.0], [2500.0, 1.0], [4400.0, 1.0], [300.0, 198.0], [400.0, 910.0], [500.0, 309.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 10800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 39.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4022.0, "series": [{"data": [[0.0, 4022.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1939.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 39.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.8098159509202443, "minX": 1.63774002E12, "maxY": 5.0, "series": [{"data": [[1.63774056E12, 3.8098159509202443], [1.63774008E12, 5.0], [1.63774026E12, 5.0], [1.63774044E12, 5.0], [1.63774014E12, 5.0], [1.63774032E12, 5.0], [1.6377405E12, 5.0], [1.63774002E12, 5.0], [1.6377402E12, 5.0], [1.63774038E12, 5.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774056E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 196.0, "minX": 1.0, "maxY": 821.0, "series": [{"data": [[4.0, 295.0], [2.0, 306.2142857142857], [1.0, 223.0], [5.0, 324.77987846049984], [3.0, 261.0]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[4.965333333333333, 324.4140000000001]], "isOverall": false, "label": "Get aws/sts-Aggregated", "isController": false}, {"data": [[4.0, 679.0], [2.0, 597.6428571428572], [1.0, 617.0], [5.0, 662.5526315789477], [3.0, 821.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[4.966666666666668, 662.0440000000006]], "isOverall": false, "label": "Get Phos-Aggregated", "isController": false}, {"data": [[4.0, 196.0], [2.0, 213.61538461538458], [1.0, 406.0], [5.0, 233.12879298718846]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[4.969333333333333, 233.00066666666703]], "isOverall": false, "label": "Get Covid Exposure site-Aggregated", "isController": false}, {"data": [[4.0, 518.6666666666666], [2.0, 448.4615384615384], [1.0, 409.0], [5.0, 490.8442346594746]], "isOverall": false, "label": "Login  Request", "isController": false}, {"data": [[4.969333333333333, 490.47800000000063]], "isOverall": false, "label": "Login  Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 631.45, "minX": 1.63774002E12, "maxY": 28997.683333333334, "series": [{"data": [[1.63774056E12, 6304.5], [1.63774008E12, 24893.016666666666], [1.63774026E12, 26342.516666666666], [1.63774044E12, 28286.866666666665], [1.63774014E12, 26583.166666666668], [1.63774032E12, 28997.683333333334], [1.6377405E12, 27553.933333333334], [1.63774002E12, 3009.5833333333335], [1.6377402E12, 27073.55], [1.63774038E12, 27855.183333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63774056E12, 1278.75], [1.63774008E12, 5208.35], [1.63774026E12, 5482.95], [1.63774044E12, 5874.916666666667], [1.63774014E12, 5504.283333333334], [1.63774032E12, 6001.033333333334], [1.6377405E12, 5732.35], [1.63774002E12, 631.45], [1.6377402E12, 5613.8], [1.63774038E12, 5797.116666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774056E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 200.5775401069519, "minX": 1.63774002E12, "maxY": 2751.9523809523807, "series": [{"data": [[1.63774056E12, 295.5952380952381], [1.63774008E12, 440.86060606060596], [1.63774026E12, 329.71264367816093], [1.63774044E12, 304.93582887700546], [1.63774014E12, 308.528409090909], [1.63774032E12, 300.01570680628254], [1.6377405E12, 289.3224043715847], [1.63774002E12, 390.6111111111111], [1.6377402E12, 313.70555555555546], [1.63774038E12, 320.7771739130435]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.63774056E12, 650.0476190476188], [1.63774008E12, 622.1097560975613], [1.63774026E12, 686.7241379310346], [1.63774044E12, 651.6363636363636], [1.63774014E12, 686.2386363636367], [1.63774032E12, 609.9010416666665], [1.6377405E12, 677.8791208791209], [1.63774002E12, 1332.75], [1.6377402E12, 671.1843575418992], [1.63774038E12, 621.4239130434779]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.63774056E12, 215.74999999999997], [1.63774008E12, 284.7664670658682], [1.63774026E12, 230.28571428571428], [1.63774044E12, 200.5775401069519], [1.63774014E12, 237.4540229885058], [1.63774032E12, 218.17801047120415], [1.6377405E12, 226.16483516483518], [1.63774002E12, 214.8571428571429], [1.6377402E12, 239.75280898876406], [1.63774038E12, 238.74594594594592]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.63774056E12, 437.53846153846166], [1.63774008E12, 498.20958083832323], [1.63774026E12, 467.2399999999999], [1.63774044E12, 444.090909090909], [1.63774014E12, 480.022857142857], [1.63774032E12, 443.06842105263166], [1.6377405E12, 448.6557377049181], [1.63774002E12, 2751.9523809523807], [1.6377402E12, 450.24719101123594], [1.63774038E12, 445.4810810810811]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774056E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 200.51336898395724, "minX": 1.63774002E12, "maxY": 2751.47619047619, "series": [{"data": [[1.63774056E12, 295.5238095238095], [1.63774008E12, 440.79393939393924], [1.63774026E12, 329.70114942528716], [1.63774044E12, 304.8930481283421], [1.63774014E12, 308.4545454545456], [1.63774032E12, 299.99999999999994], [1.6377405E12, 289.2732240437158], [1.63774002E12, 390.44444444444434], [1.6377402E12, 313.6277777777777], [1.63774038E12, 320.7608695652175]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.63774056E12, 620.5], [1.63774008E12, 620.7987804878047], [1.63774026E12, 683.2068965517241], [1.63774044E12, 650.2139037433155], [1.63774014E12, 685.028409090909], [1.63774032E12, 608.3489583333337], [1.6377405E12, 665.5384615384613], [1.63774002E12, 1331.3999999999999], [1.6377402E12, 667.9608938547484], [1.63774038E12, 618.0923913043478]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.63774056E12, 215.7], [1.63774008E12, 284.71856287425135], [1.63774026E12, 230.27999999999992], [1.63774044E12, 200.51336898395724], [1.63774014E12, 237.39655172413785], [1.63774032E12, 218.16230366492147], [1.6377405E12, 226.11538461538467], [1.63774002E12, 214.8095238095238], [1.6377402E12, 239.70224719101128], [1.63774038E12, 238.7135135135135]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.63774056E12, 437.4102564102566], [1.63774008E12, 498.11976047904176], [1.63774026E12, 467.2228571428571], [1.63774044E12, 444.08021390374336], [1.63774014E12, 479.94857142857154], [1.63774032E12, 443.0473684210527], [1.6377405E12, 448.5846994535519], [1.63774002E12, 2751.47619047619], [1.6377402E12, 450.19662921348305], [1.63774038E12, 445.4594594594594]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774056E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.63774002E12, "maxY": 636.8095238095237, "series": [{"data": [[1.63774056E12, 0.0], [1.63774008E12, 9.84848484848485], [1.63774026E12, 9.229885057471268], [1.63774044E12, 5.3689839572192515], [1.63774014E12, 6.261363636363636], [1.63774032E12, 10.120418848167532], [1.6377405E12, 2.8251366120218577], [1.63774002E12, 0.0], [1.6377402E12, 0.0], [1.63774038E12, 16.66304347826088]], "isOverall": false, "label": "Get aws/sts", "isController": false}, {"data": [[1.63774056E12, 0.0], [1.63774008E12, 0.0], [1.63774026E12, 2.948275862068967], [1.63774044E12, 4.379679144385028], [1.63774014E12, 0.0], [1.63774032E12, 0.0], [1.6377405E12, 0.0], [1.63774002E12, 0.0], [1.6377402E12, 7.145251396648048], [1.63774038E12, 0.0]], "isOverall": false, "label": "Get Phos", "isController": false}, {"data": [[1.63774056E12, 0.0], [1.63774008E12, 4.287425149700599], [1.63774026E12, 0.0], [1.63774044E12, 2.7700534759358293], [1.63774014E12, 7.6494252873563235], [1.63774032E12, 3.209424083769634], [1.6377405E12, 0.0], [1.63774002E12, 0.0], [1.6377402E12, 12.337078651685392], [1.63774038E12, 10.518918918918919]], "isOverall": false, "label": "Get Covid Exposure site", "isController": false}, {"data": [[1.63774056E12, 0.0], [1.63774008E12, 7.311377245508983], [1.63774026E12, 8.028571428571425], [1.63774044E12, 2.759358288770054], [1.63774014E12, 2.217142857142857], [1.63774032E12, 2.7473684210526317], [1.6377405E12, 17.9344262295082], [1.63774002E12, 636.8095238095237], [1.6377402E12, 0.0], [1.63774038E12, 0.0]], "isOverall": false, "label": "Login  Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774056E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 141.0, "minX": 1.63774002E12, "maxY": 10874.0, "series": [{"data": [[1.63774056E12, 1365.0], [1.63774008E12, 8210.0], [1.63774026E12, 6374.0], [1.63774044E12, 1441.0], [1.63774014E12, 1924.0], [1.63774032E12, 1096.0], [1.6377405E12, 1553.0], [1.63774002E12, 10874.0], [1.6377402E12, 1737.0], [1.63774038E12, 1890.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63774056E12, 626.1999999999999], [1.63774008E12, 620.0], [1.63774026E12, 635.1], [1.63774044E12, 665.3000000000001], [1.63774014E12, 718.8000000000001], [1.63774032E12, 617.0], [1.6377405E12, 714.0], [1.63774002E12, 2254.0], [1.6377402E12, 654.0], [1.63774038E12, 618.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63774056E12, 1128.1999999999946], [1.63774008E12, 2181.4800000000037], [1.63774026E12, 1454.7899999999984], [1.63774044E12, 932.02], [1.63774014E12, 1102.6200000000013], [1.63774032E12, 882.8000000000002], [1.6377405E12, 1134.9399999999985], [1.63774002E12, 10874.0], [1.6377402E12, 1132.8400000000001], [1.63774038E12, 1436.66]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63774056E12, 720.4], [1.63774008E12, 718.0], [1.63774026E12, 723.9999999999991], [1.63774044E12, 743.55], [1.63774014E12, 821.0], [1.63774032E12, 631.75], [1.6377405E12, 756.8499999999991], [1.63774002E12, 10151.650000000007], [1.6377402E12, 777.799999999999], [1.63774038E12, 718.05]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63774056E12, 145.0], [1.63774008E12, 149.0], [1.63774026E12, 144.0], [1.63774044E12, 142.0], [1.63774014E12, 145.0], [1.63774032E12, 144.0], [1.6377405E12, 143.0], [1.63774002E12, 156.0], [1.6377402E12, 141.0], [1.63774038E12, 141.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63774056E12, 404.0], [1.63774008E12, 405.0], [1.63774026E12, 401.0], [1.63774044E12, 388.0], [1.63774014E12, 407.0], [1.63774032E12, 383.0], [1.6377405E12, 388.5], [1.63774002E12, 476.0], [1.6377402E12, 403.0], [1.63774038E12, 395.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774056E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 306.0, "minX": 1.0, "maxY": 1893.5, "series": [{"data": [[8.0, 408.0], [2.0, 420.0], [9.0, 466.5], [10.0, 405.0], [11.0, 400.0], [12.0, 403.0], [3.0, 406.0], [13.0, 376.0], [14.0, 396.0], [15.0, 393.0], [1.0, 1893.5], [4.0, 532.5], [16.0, 369.5], [17.0, 306.0], [5.0, 405.0], [6.0, 550.5], [7.0, 456.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 17.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 306.0, "minX": 1.0, "maxY": 1893.0, "series": [{"data": [[8.0, 408.0], [2.0, 419.5], [9.0, 466.5], [10.0, 405.0], [11.0, 400.0], [12.0, 403.0], [3.0, 406.0], [13.0, 376.0], [14.0, 395.5], [15.0, 393.0], [1.0, 1893.0], [4.0, 531.5], [16.0, 369.5], [17.0, 306.0], [5.0, 405.0], [6.0, 550.0], [7.0, 456.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 17.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.4166666666666667, "minX": 1.63774002E12, "maxY": 12.733333333333333, "series": [{"data": [[1.63774056E12, 2.6333333333333333], [1.63774008E12, 11.05], [1.63774026E12, 11.633333333333333], [1.63774044E12, 12.466666666666667], [1.63774014E12, 11.683333333333334], [1.63774032E12, 12.733333333333333], [1.6377405E12, 12.166666666666666], [1.63774002E12, 1.4166666666666667], [1.6377402E12, 11.916666666666666], [1.63774038E12, 12.3]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774056E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.63774002E12, "maxY": 9.566666666666666, "series": [{"data": [[1.63774056E12, 2.066666666666667], [1.63774008E12, 8.266666666666667], [1.63774026E12, 8.716666666666667], [1.63774044E12, 9.35], [1.63774014E12, 8.766666666666667], [1.63774032E12, 9.566666666666666], [1.6377405E12, 9.116666666666667], [1.63774002E12, 0.9833333333333333], [1.6377402E12, 8.95], [1.63774038E12, 9.216666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63774056E12, 0.65], [1.63774008E12, 2.783333333333333], [1.63774026E12, 2.9166666666666665], [1.63774044E12, 3.1166666666666667], [1.63774014E12, 2.9166666666666665], [1.63774032E12, 3.1666666666666665], [1.6377405E12, 3.05], [1.63774002E12, 0.35], [1.6377402E12, 2.966666666666667], [1.63774038E12, 3.0833333333333335]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63774056E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.63774002E12, "maxY": 3.2, "series": [{"data": [[1.63774056E12, 0.65], [1.63774008E12, 2.783333333333333], [1.63774026E12, 2.9166666666666665], [1.63774044E12, 3.1166666666666667], [1.63774014E12, 2.9166666666666665], [1.63774032E12, 3.1666666666666665], [1.6377405E12, 3.05], [1.63774002E12, 0.35], [1.6377402E12, 2.966666666666667], [1.63774038E12, 3.0833333333333335]], "isOverall": false, "label": "Login  Request-success", "isController": false}, {"data": [[1.63774056E12, 0.6666666666666666], [1.63774008E12, 2.783333333333333], [1.63774026E12, 2.9166666666666665], [1.63774044E12, 3.1166666666666667], [1.63774014E12, 2.9], [1.63774032E12, 3.183333333333333], [1.6377405E12, 3.033333333333333], [1.63774002E12, 0.35], [1.6377402E12, 2.966666666666667], [1.63774038E12, 3.0833333333333335]], "isOverall": false, "label": "Get Covid Exposure site-success", "isController": false}, {"data": [[1.63774056E12, 0.7], [1.63774008E12, 2.75], [1.63774026E12, 2.9], [1.63774044E12, 3.1166666666666667], [1.63774014E12, 2.933333333333333], [1.63774032E12, 3.183333333333333], [1.6377405E12, 3.05], [1.63774002E12, 0.3], [1.6377402E12, 3.0], [1.63774038E12, 3.066666666666667]], "isOverall": false, "label": "Get aws/sts-success", "isController": false}, {"data": [[1.63774056E12, 0.7], [1.63774008E12, 2.7333333333333334], [1.63774026E12, 2.9], [1.63774044E12, 3.1166666666666667], [1.63774014E12, 2.933333333333333], [1.63774032E12, 3.2], [1.6377405E12, 3.033333333333333], [1.63774002E12, 0.3333333333333333], [1.6377402E12, 2.9833333333333334], [1.63774038E12, 3.066666666666667]], "isOverall": false, "label": "Get Phos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774056E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.3333333333333333, "minX": 1.63774002E12, "maxY": 12.733333333333333, "series": [{"data": [[1.63774056E12, 2.716666666666667], [1.63774008E12, 11.05], [1.63774026E12, 11.633333333333333], [1.63774044E12, 12.466666666666667], [1.63774014E12, 11.683333333333334], [1.63774032E12, 12.733333333333333], [1.6377405E12, 12.166666666666666], [1.63774002E12, 1.3333333333333333], [1.6377402E12, 11.916666666666666], [1.63774038E12, 12.3]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63774056E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

